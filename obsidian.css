@charset "UTF-8";
/* @settings

name: Maple
id: Maple
settings:
    -
        id: workspace
        title: workspace
        title.zh: 工作区
        type: heading
        collapsed: true
        level: 2
    -
        id: colors
        title: colors
        title.zh: 颜色
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-color-dirs
        title: dir color in file explorer
        title.zh: 文件夹颜色
        type: variable-themed-color
        format: rgb-values
        opacity: false
        default-light: rgb(245, 180, 0)
        default-dark: rgb(245, 180, 0)
    -
        id: accent-colors
        title: accent colors
        title.zh: 高亮颜色
        type: heading
        collapsed: true
        level: 4
    -
        id: color-fix-theme-color
        title: format accent color
        description: normalize accent color for better compability to theme. after opening, only the hue will be adjust, saturation/lightness will be fixed
        title.zh: 规范颜色
        description.zh: 固定主题色的 saturation / lightness 使颜色更适合主题，开启后主题色只调整 hue
        type: class-toggle
    -
        id: color-use-custom-color
        title: use custom accent color
        description: use style setting accent color instead of Obsidian's accent color
        title.zh: 自定义 accent color
        description.zh: 使用 style setting 的颜色，而不是 Obsidian 自带的颜色
        type: class-toggle
    -
        id: setting-accent-hue-light
        title: light accent color (Hue)
        title.zh: 亮色模式
        type: variable-number-slider
        default: 116
        min: 0
        max: 360
        step: 5
    -
        id: setting-accent-hue-dark
        title.zh: 暗色模式
        title: dark accent color (Hue)
        type: variable-number-slider
        default: 207
        min: 0
        max: 360
        step: 5
    -
        id: search-internal
        title: document search panel
        title.zh: 文档内搜索框
        type: heading
        collapsed: true
        level: 3
    -
        id: search-internal-expand-on-focus
        title: search/replace input expand on search/replace input focus
        title.zh: 文档内搜索框获得焦点时扩大宽度
        type: class-toggle
    -
        id: search-internal-disable-select-all
        title: hide select all button
        description: display it maybe seems to be too long
        title.zh: 文档内搜索框隐藏选择全部按钮
        description.zh: 显示会过长
        type: class-toggle
        default: true
    -
        id: tab
        title: tab
        title.zh: tab 栏
        type: heading
        collapsed: true
        level: 3
    -
        id: tab-float
        title: float tabs style like firefox / Microsoft Edge
        title.zh: 仿 Firefox / Microsoft Edge 的 tab 栏
        type: class-toggle
    -
        id: tab-title-bar
        title: float tab title bar
        description: component style with round corner
        title.zh: 悬浮的 tab 标题栏
        description.zh: 圆角 + 模块化
        type: class-toggle
        default: true
    -
        id: tab-title-bar-shadow
        title: add shadow for active tab title bar
        title.zh: 为当前的 tab 标题栏添加阴影
        type: class-toggle
    -
        id: blur
        title: Acrylic style background
        title.zh: 亚克力背景
        type: heading
        collapsed: true
        level: 3
    -
        id: back-blur-menu
        title: menu / suggestion popover
        title.zh: 菜单 / 提示框
        type: class-toggle
    -
        id: back-blur-modal
        title: modal mask
        title.zh: 弹出框背景遮罩
        type: class-toggle
    -
        id: back-blur-title-bar
        title: tab title bar
        description: ❗scrollbar will move up
        title.zh: tab 标题栏
        description.zh: ❗滚动条会上移，ctrl + home返回顶部时第一行会被遮盖
        type: class-toggle
    -
        id: modal
        title: modal
        title.zh: 弹出面板
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-header
        title: add header for setting panel
        description: better with plugin “setting search”
        title.zh: 为设置面板添加顶部框
        description.zh: 配合 setting search 插件使用更佳
        type: class-toggle
    -
        id: setting-group-title
        title: add style for left navigation group title
        title.zh: 为左侧选项组标题添加样式
        type: class-toggle
        default: true
    -
        id: scrollbar
        title: scrollbar & scroll behavior
        title.zh: 滚动条 & 滚动样式
        type: heading
        collapsed: true
        level: 3
    -
        id: scrollbar-hover-animation
        title: enable scrollbar movein animation
        title.zh: 启用滚动条添加鼠标移入动画效果
        type: class-toggle
        default: true
    -
        id: scrollbar-gutter
        title: scrollbar gutter config
        description: scroll bar appears without squeezing the parent container❗overlay property is marked as deprecated officially
        title.zh: 控制滚动条槽
        description.zh: 使滚动条出现时不会对父容器产生挤压，选项：默认(default) / 悬浮滚动条(overlay) / 预留滚动条位置(reserve)❗overlay可能在后续的版本不支持
        type: class-select
        allowEmpty: false
        default: scrollbar-gutter-default
        options:
            -   label: default
                value: scrollbar-gutter-default
            -   label: overlay
                value: scrollbar-gutter-overlay
            -   label: reserve
                value: scrollbar-gutter-reserve
    -
        id: scrollbar-smooth
        title: smooth scroll
        title.zh: 开启顺滑滚动
        type: class-toggle
    -
        id: scrollbar-smooth-editor
        title: smooth scroll for editor
        description: may cause bad animation
        title.zh: 编辑器开启顺滑滚动
        description.zh: ❗跳转动画可能不太好
        type: class-toggle
    -
        id: loading
        title: loading
        title.zh: 加载图
        type: heading
        collapsed: true
        level: 3
    -
        id: loading-theme
        title: loading theme
        title.zh: 加载图样式
        type: class-select
        allowEmpty: false
        default: loading-default
        options:
            - loading-default
          #  - loading-img
            - loading-text
    #-
    #    id: loading-img-url
    #    title: loading image url
    #    description: should be wrapped with url()
    #    description.zh: 加载页面图片url，需要用url()包裹
    #    type: variable-text
    #    default: url(https://)
    -
        id: loading-text-content
        title: loading typing style text
        description: better not be to long
        title.zh: 加载页面打字机效果文字
        description.zh: 最好不要太多字
        type: variable-text
        default: "'快乐摸鱼中...............'"
    -
        id: editor
        title: editor
        title.zh: 编辑器
        type: heading
        collapsed: true
        level: 2
    -
        id: text-line-height
        title: text & font & line
        title.zh: 文字 & 字体 & 行
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-text-bold-color
        title: bold text color
        title.zh: 粗体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-text-italic-color
        title: italic text color
        title.zh: 斜体颜色
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: font-maple
        title: use “Maple Mono” as monospace
        description: https://github.com/subframe7536/Maple-font
        title.zh: 使用 Maple Mono 作为等宽字体
        description.zh: https://github.com/subframe7536/Maple-font
        type: class-toggle
        default: true
    -
        id: font-fix-latex
        title: fix latex italic absent
        description: latex in my vault often wrong rendered, so i make this setting
        title.zh: 修复 latex 斜体问题
        description.zh: 在我的仓库里经常渲染失败，只能自己打包一份字体进主题了
        type: class-toggle
    -
        id: setting-line-height
        title: editor line height
        title.zh: 编辑器行高
        type: variable-number-slider
        default: 2.1
        min: 1.8
        max: 2.4
        step: 0.1
    -
        id: line-active-disable
        title: disable active line hightlight
        title.zh: 当前行不高亮
        type: class-toggle
    -
        id: links
        title: link
        title.zh: 链接
        type: heading
        collapsed: true
        level: 3
    -
        id: setting-link-internal-color
        title: internal link color
        title.zh: 内部链接颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-link-external-color
        title: external link color
        title.zh: 外部链接颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: link-icon
        title: add icon before link
        description: ❗only in editor
        title.zh: live preview 链接前添加图标
        description.zh: ❗只在编辑器内生效
        type: class-toggle
        default: true
    -
        id: link-click-to-edit-in-live-preview
        title: click to edit link in live preview
        description: ❗will disable hover animation
        title.zh: live preview 模式时点击链接进行编辑而不是跳转
        description.zh: ❗鼠标经过动画会消失
        type: class-toggle
    -
        id: heading
        title: heading
        title.zh: 标题
        type: heading
        collapsed: true
        level: 3
    -
        id: heading-style
        title: heading style
        title.zh: 标题样式
        type: heading
        collapsed: true
        level: 4
    -
        id: heading-h2-underline
        title: add underline for h2
        description: with line-gredient
        title.zh: 添加 h2 下划线
        description.zh: 有渐变色
        type: class-toggle
        default: true
    -
        id: heading-h6-variant
        title: set font small-caps for h6
        description: always capital style
        title.zh: 添加 h6 small-caps
        description.zh: 全大写
        type: class-toggle
        default: true
    -
        id: heading-icon
        title: heading icon
        title.zh: 标题图标
        type: heading
        collapsed: true
        level: 4
    -
        id: heading-icon-fix
        title: always show heading icon
        description: add border on hover
        title.zh: 总是显示标题前置标志
        description.zh: 鼠标经过时添加边框
        type: class-toggle
    -
        id: heading-icon-only-text
        title: don't show icon border or background
        description: only show header level
        title.zh: 不添加边框或者背景色
        description.zh: 只显示标题等级
        type: class-toggle
    -
        id: heading-color
        title: heading color
        title.zh: 标题颜色
        type: heading
        collapsed: true
        level: 4
    -
        id: setting-h1-color
        title: h1 color
        title.zh: 标题 1 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h2-color
        title: h2 color
        title.zh: 标题 2 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h3-color
        title: h3 color
        title.zh: 标题 3 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h4-color
        title: h4 color
        title.zh: 标题 4 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h5-color
        title: h5 color
        title.zh: 标题 5 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: setting-h6-color
        title: h6 color
        title.zh: 标题 6 颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: hr
        title: hr
        title.zh: 分隔行
        type: heading
        collapsed: true
        level: 3
    -
        id: hr-icon
        title: set icon in the center of hr
        title.zh: 分割行中部图标
        type: variable-text
        default: "'⭐'"
    -
        id: table
        title: table
        title.zh: 表格
        type: heading
        collapsed: true
        level: 3
    -
        id: table-colorful
        title: colorful table
        description: accent header and line color
        title.zh: 多彩表格
        description.zh: 添加表头和行的颜色
        type: class-toggle
        default: true
    -
        id: embed
        title: embed
        title.zh: 内嵌
        type: heading
        collapsed: true
        level: 3
    -
        id: embed-title-right-top
        title: move embed title to right top
        description: visiable on hover, disabled when alias is '#', Example ![[FileName|#]]
        title.zh: 内嵌文档标题移至右上角
        description.zh: 鼠标经过时显示 | 别名为'#'时禁用，例：![[文件名|#]]
        type: class-toggle
        default: true
    -
        id: quote
        title: quote
        title.zh: 引用
        type: heading
        collapsed: true
        level: 3
    -
        id: quote-theme
        title: enable quote theme
        description: with width guide line
        title.zh: 使用引用块主题
        description.zh: 宽引导线
        type: class-toggle
        default: true
#    -
#        id: quote-break-all
#        title: break word in the quote line
#        description: recommand to open it when the whole line needs fill with letters without word
#        type: class-toggle
    -
        id: quote-mark
        title: add front quote mark
        title.zh: 引用块添加前置引号
        type: class-toggle
        default: true
    -
        id: code
        title: code
        title.zh: 代码
        type: heading
        collapsed: true
        level: 3
    -
        id: code-line-number
        title: add code block line number in live preview mode
        title.zh: 为 实时预览模式 代码块添加行号
        type: class-toggle
        default: true
    -
        id: code-language
        title: add code block language indicator in preview mode
        title.zh: 为 预览模式 代码块添加语言标识
        type: class-toggle
        default: true
    -
        id: setting-code-language-color
        title: language indicator color
        title.zh: 语言标识颜色
        type: variable-themed-color
        format: hex
        opacity: false
        default-light: '#'
        default-dark: '#'
    -
        id: code-mac-style-header
        title: add mac style code block header in preview mode
        description: no code block border
        title.zh: 为 预览模式 代码块添加mac的标题栏
        description.zh: 没有代码块边框
        type: class-toggle
    -
        id: code-theme
        title: use theme's color schema
        title.zh: 使用主题的代码高亮
        type: class-toggle
        default: true
    -
        id: tag
        title: tag
        title.zh: 标签
        type: heading
        collapsed: true
        level: 3
    -
        id: tag-click-to-edit
        title: click to edit tags in Live-Preview mode
        description: click '#' to jump
        title.zh: 点击标签进行编辑
        description.zh: 点击'#'跳转
        type: class-toggle
    -
        id: tag-colorful
        title: enable colorful tag
        description: ❗maybe different style between edit mode and preview mode
        title.zh: 开启多彩标签
        description.zh: ❗编辑模式和预览模式颜色会不一样
        type: class-toggle
    -
        id: tag-colorful-setting
        title: tag color
        title.zh: 标签颜色
        type: heading
        collapsed: true
        level: 4
    -
        id: setting-tag-1
        title: colorful tag 1
        title.zh: 多彩标签 颜色 1
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-2
        title: colorful tag 2
        title.zh: 多彩标签 颜色 2
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-3
        title: colorful tag 3
        title.zh: 多彩标签 颜色 3
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-4
        title: colorful tag 4
        title.zh: 多彩标签 颜色 4
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-5
        title: colorful tag 5
        title.zh: 多彩标签 颜色 5
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: setting-tag-6
        title: colorful tag 6
        title.zh: 多彩标签 颜色 6
        type: variable-themed-color
        format: hex
        opacity: true
        default-light: '#'
        default-dark: '#'
    -
        id: plugin
        title: plugin
        title.zh: 插件
        type: heading
        collapsed: true
        level: 2
    -
        id: calendar
        title: calendar
        title.zh: 日历
        type: heading
        collapsed: true
        level: 3
    -
        id: calendar-swap-year-month
        title: swap year & month
        title.zh: 交换年和月的位置
        type: class-toggle
        default: true
    -
        id: calendar-year-suffix
        title: year suffix
        title.zh: 年份后缀
        type: variable-text
        default: "'年'"
*/
:is(body, body .print) {
  --font-ui-smaller: 13px;
  --font-ui-small: 14px;
  --font-ui-medium: 16px;
  --line-height-normal: 2.1;
  --color-red-rgb: 255, 99, 99 !important;
  --color-red: #e43434 !important;
  --color-green-rgb: 81, 188, 0 !important;
  --color-green: #51bc00 !important;
  --color-yellow: #f5c891 !important;
  --color-orange: #e4980c !important;
  --color-blue: #129ede !important;
  --color-cyan: #63c9c9 !important;
  --color-purple: #9084e9 !important;
  --background-modifier-error: rgba(var(--color-red-rgb), 0.8);
  --file-folding-offset: 28px;
  --animation: var(--anim-duration-fast) var(--anim-motion-smooth);
  --animation-slow: var(--anim-duration-moderate) var(--anim-motion-smooth);
  --blur: 8px;
}

html :is(body.obsidian-app.color-fix-theme-color, body.obsidian-app.color-fix-theme-color .print) {
  --accent-s: 32% !important;
  --accent-l: 58% !important;
}

:is(body.color-use-custom-color.css-settings-manager, body.color-use-custom-color.css-settings-manager .print) {
  --accent-s: var(--accent-color-s, 32%) !important;
  --accent-l: var(--accent-color-l, 58%) !important;
}

:is(body.color-use-custom-color.theme-light.css-settings-manager, body.color-use-custom-color.theme-light.css-settings-manager .print) {
  --accent-h: var(--setting-accent-hue-light, 116) !important;
}

:is(body.color-use-custom-color.theme-dark.css-settings-manager, body.color-use-custom-color.theme-dark.css-settings-manager .print) {
  --accent-h: var(--setting-accent-hue-dark, 207) !important;
}

:is(.theme-light, .theme-light .print) {
  --background-primary: hsl(
    var(--accent-h),
    calc(var(--accent-s) - 12%),
    calc(100% - (100% - var(--accent-l)) / 12)
  );
  --background-primary-hsl: var(--accent-h), calc(var(--accent-s) - 12%),
    calc(100% - (100% - var(--accent-l)) / 12);
  --background-secondary: hsl(
    calc(var(--accent-h) - 18),
    calc(var(--accent-s) - 4%),
    calc(100% - (100% - var(--accent-l)) / 8)
  );
  --background-secondary-hsl: calc(var(--accent-h) - 18),
    calc(var(--accent-s) - 4%), calc(100% - (100% - var(--accent-l)) / 8);
  --background-modifier-hover: hsla(var(--color-accent-hsl), 16%);
  --background-modifier-border-focus: hsl(
    var(--accent-h),
    calc(var(--accent-s) - 4%),
    calc(var(--accent-l) + 4%)
  );
  --background-modifier-message: hsl(
    calc(var(--accent-h) - 24),
    var(--accent-s),
    calc(var(--accent-l) - 4%)
  );
  --accent-active: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) + 4%)
  );
  --accent-inactive: hsl(
    var(--accent-h),
    calc(var(--accent-s) - 4%),
    calc(var(--accent-l) + 24%)
  );
  --frame-background-color: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) + 32%)
  );
  --frame-outline-color: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) + 23.5%)
  );
  --frame-muted-color: hsl(
    var(--accent-h),
    calc(var(--accent-s) - 20%),
    calc(var(--accent-l) - 10%)
  );
  --background-modifier-cover: var(--color-base-70) !important;
  --md-container-bg: hsla(
    calc(var(--accent-h) + 8),
    calc(var(--accent-s) / 1.2),
    calc(100% - (100% - var(--accent-l)) / 6),
    70%
  );
}

:is(.theme-dark, .theme-dark .print) {
  --background-primary: hsl(var(--accent-h), 4%, calc(var(--accent-l) / 8));
  --background-primary-hsl: var(--accent-h), 4%, calc(var(--accent-l) / 8);
  --background-secondary: hsl(
    calc(var(--accent-h) + 8),
    calc(var(--accent-s) / 6),
    calc(var(--accent-l) / 4)
  );
  --background-secondary-hsl: calc(var(--accent-h) + 8),
    calc(var(--accent-s) / 6), calc(var(--accent-l) / 4);
  --background-modifier-hover: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) / 3)
  );
  --background-modifier-border-focus: hsl(
    var(--accent-h),
    12%,
    calc(var(--accent-l) - 12%)
  );
  --background-modifier-message: hsl(
    calc(var(--accent-h) - 30),
    var(--accent-s),
    calc(var(--accent-l) - 20%)
  );
  --accent-active: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) - 16%)
  );
  --accent-inactive: hsl(
    var(--accent-h),
    calc(var(--accent-s) + 24%),
    calc(var(--accent-l) - 32%)
  );
  --frame-background-color: hsl(var(--accent-h), 12%, 20%);
  --frame-outline-color: hsl(
    calc(var(--accent-h) - 24),
    calc(var(--accent-s) + 6%),
    24%
  );
  --frame-muted-color: hsl(
    var(--accent-h),
    calc(var(--accent-s) - 20%),
    calc(var(--accent-l) + 10%)
  );
  --text-normal: hsla(var(--accent-h), 50%, 94%, 75%);
  --md-container-bg: hsl(calc(var(--accent-h) - 4), 20%, 10%);
}

@font-face {
  font-family: EMBED-TEX-I;
  src: url("data:application/font-woff;base64,") format("woff");
}
@font-face {
  font-family: "maplemono";
  src: local("Maple Mono SC NF"), local("Maple Mono NF"), local("Maple Mono"), url("data:application/octet-stream;base64,") format("woff2");
  font-style: normal;
}
@font-face {
  font-family: "maplemono";
  src: local("Maple Mono SC NF Italic"), local("Maple Mono NF Italic"), local("Maple Mono Italic"), url("data:application/octet-stream;base64,") format("woff2");
  font-style: italic;
}
/* ====== 代码 ====== */
:is(body, .print .markdown-rendered) {
  --inline-code: var(--color-red);
  --code-background: var(--md-container-bg);
  --code-function: var(--color-orange);
  --code-important: var(--color-purple);
  --code-keyword: var(--color-purple);
  --code-property: var(--color-orange);
  --code-punctuation: var(--color-blue);
  --code-string: var(--color-green);
  --code-tag: var(--color-red);
  --code-value: var(--color-orange);
  --code-comment: var(--text-faint);
  --code-normal: var(--code-base);
}

:is(.theme-light, .theme-light .print) {
  --code-base: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) - 30%)
  );
  --code-mac-style-header-bg: #333;
}
:is(.theme-light, .theme-light .print) :is(.cm-inline-code, .cm-hmd-codeblock.cm-formatting, .markdown-rendered code) {
  --code-background: hsl(calc(var(--accent-h) - 8), 10%, 94%);
}

:is(.theme-dark, .theme-dark .print) {
  --code-base: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) + 10%)
  );
  --code-mac-style-header-bg: #000;
}
:is(.theme-dark, .theme-dark .print) :is(.cm-inline-code, .cm-hmd-codeblock.cm-formatting, .markdown-rendered code) {
  --code-background: hsl(calc(var(--accent-h) - 8), 20%, 16%);
}

.cm-hmd-codeblock.cm-formatting,
.markdown-rendered code {
  color: var(--inline-code);
}

.markdown-preview-view pre code {
  color: var(--code-base);
}

.cm-inline-code {
  color: var(--inline-code) !important;
  border-radius: var(--size-4-1);
}
.cm-inline-code.cm-header {
  color: var(--inline-code) !important;
}

.cm-s-obsidian .cm-line {
  --code-bg-radius: var(--radius-l);
  --code-bg-border: var(--size-2-1) solid var(--nav-item-background-hover);
}
.cm-s-obsidian .cm-line.HyperMD-codeblock {
  line-height: calc(var(--line-height-normal) - 0.2);
  color: var(--color-blue) !important;
  border-left: var(--code-bg-border);
  border-right: var(--code-bg-border);
  border-radius: 0 !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock .cm-fold-indicator .collapse-indicator {
  padding-right: var(--size-4-3) !important;
  right: calc(var(--size-4-2) * -1) !important;
  cursor: pointer;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-begin-bg {
  border-top: var(--code-bg-border);
  border-top-left-radius: var(--code-bg-radius) !important;
  border-top-right-radius: var(--code-bg-radius) !important;
}
.cm-s-obsidian .cm-line.HyperMD-codeblock.HyperMD-codeblock-end-bg {
  border-bottom: var(--code-bg-border);
  border-bottom-left-radius: var(--code-bg-radius) !important;
  border-bottom-right-radius: var(--code-bg-radius) !important;
}

body :is(.markdown-source-view, .markdown-rendered) {
  --block-outline-width: 3px;
}

.cm-embed-block {
  box-shadow: none !important;
  border: var(--block-outline-width) solid transparent;
  border-radius: var(--radius-l) !important;
  transition: var(--animation);
}
.cm-embed-block:hover {
  border-color: var(--accent-active);
}
.cm-embed-block .edit-block-button {
  border-radius: calc(var(--radius-l) / 2) !important;
  transition: var(--animation);
}

code[class*=language-],
pre {
  line-height: calc(var(--line-height-normal) - 0.2);
}

body .markdown-rendered pre {
  border-radius: var(--radius-l);
  border: var(--size-2-1) solid var(--accent-inactive);
  transition: var(--animation);
  overflow-x: hidden;
}
body .markdown-rendered pre:hover {
  border-color: var(--accent-active);
}
body .markdown-rendered pre:hover button.copy-code-button {
  opacity: 1;
}
body .markdown-rendered pre .copy-code-button {
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 24 24"><g fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round"><rect x="8" y="8" width="12" height="12" rx="2"></rect><path d="M16 8V6a2 2 0 0 0-2-2H6a2 2 0 0 0-2 2v8a2 2 0 0 0 2 2h2"></path></g></svg>');
  width: 1.5rem;
  height: 1.5rem;
  line-height: 1.5rem;
  opacity: 0;
  color: transparent;
  background-color: var(--setting-code-language-color, var(--accent-active));
  transition: var(--animation);
  margin: 0;
  display: block !important;
  top: var(--size-4-1);
  right: var(--size-4-1);
  z-index: 99;
}
body .markdown-rendered pre .copy-code-button:hover {
  opacity: 1;
  background-color: var(--accent-inactive);
}

body.code-language .markdown-rendered pre {
  padding: 1.8rem 1rem;
  position: relative;
}
body.code-language .markdown-rendered pre[class*=language-]::before {
  content: "未知语言";
  font-family: var(--font-text);
  color: var(--setting-code-language-color, var(--inline-code));
  font-weight: bold;
  font-size: 0.8rem;
  position: absolute;
  letter-spacing: var(--size-2-1);
  text-align: right;
  right: calc(1.5rem + 2 * var(--size-4-1));
  top: 0.2rem;
  line-height: var(--line-height-normal);
  z-index: 9;
}
body.code-language .markdown-rendered pre[class~=language-c]::before {
  content: "C";
}
body.code-language .markdown-rendered pre[class~=language-properties]::before {
  content: "PROPERTIES";
}
body.code-language .markdown-rendered pre[class~=language-python]::before {
  content: "PYTHON";
}
body.code-language .markdown-rendered pre[class~=language-nginx]::before {
  content: "NGINX";
}
body.code-language .markdown-rendered pre[class~=language-css]::before {
  content: "CSS";
}
body.code-language .markdown-rendered pre[class~=language-javascript]::before {
  content: "JAVASCRIPT";
}
body.code-language .markdown-rendered pre[class~=language-js]::before {
  content: "JS";
}
body.code-language .markdown-rendered pre[class~=language-typescript]::before {
  content: "TYPESCRIPT";
}
body.code-language .markdown-rendered pre[class~=language-ts]::before {
  content: "TS";
}
body.code-language .markdown-rendered pre[class~=language-jsp]::before {
  content: "JSP";
}
body.code-language .markdown-rendered pre[class~=language-php]::before {
  content: "PHP";
}
body.code-language .markdown-rendered pre[class~=language-lua]::before {
  content: "LUA";
}
body.code-language .markdown-rendered pre[class~=language-shell]::before {
  content: "SHELL";
}
body.code-language .markdown-rendered pre[class~=language-powershell]::before {
  content: "POWERSHELL";
}
body.code-language .markdown-rendered pre[class~=language-flow]::before {
  content: "FLOW";
}
body.code-language .markdown-rendered pre[class~=language-sequence]::before {
  content: "SEQUENCE";
}
body.code-language .markdown-rendered pre[class~=language-sql]::before {
  content: "SQL";
}
body.code-language .markdown-rendered pre[class~=language-yaml]::before {
  content: "YAML";
}
body.code-language .markdown-rendered pre[class~=language-yml]::before {
  content: "YML";
}
body.code-language .markdown-rendered pre[class~=language-ini]::before {
  content: "INI";
}
body.code-language .markdown-rendered pre[class~=language-xml]::before {
  content: "XML";
}
body.code-language .markdown-rendered pre[class~=language-cs]::before {
  content: "CS";
}
body.code-language .markdown-rendered pre[class~=language-cpp]::before {
  content: "CPP";
}
body.code-language .markdown-rendered pre[class~=language-java]::before {
  content: "JAVA";
}
body.code-language .markdown-rendered pre[class~=language-html]::before {
  content: "HTML";
}
body.code-language .markdown-rendered pre[class~=language-txt]::before {
  content: "TXT";
}
body.code-language .markdown-rendered pre[class~=language-md]::before {
  content: "MD";
}
body.code-language .markdown-rendered pre[class~=language-bat]::before {
  content: "BAT";
}
body.code-language .markdown-rendered pre[class~=language-json]::before {
  content: "JSON";
}
body.code-language .markdown-rendered pre[class~=language-groovy]::before {
  content: "GROOVY";
}
body.code-language .markdown-rendered pre[class~=language-scss]::before {
  content: "SCSS";
}
body.code-language .markdown-rendered pre[class~=language-bash]::before {
  content: "BASH";
}
body.code-language .markdown-rendered pre[class~=language-cmd]::before {
  content: "CMD";
}
body.code-language .markdown-rendered pre[class~=language-latex]::before {
  content: "LATEX";
}
body.code-language .markdown-rendered pre[class~=language-zig]::before {
  content: "ZIG";
}
body.code-language .markdown-rendered pre[class~=language-ssml]::before {
  content: "SSML";
}
body.code-language .markdown-rendered pre[class~=language-jsx]::before {
  content: "JSX";
}
body.code-language .markdown-rendered pre[class~=language-tsx]::before {
  content: "TSX";
}
body.code-language .markdown-rendered pre[class~=language-tsconfig]::before {
  content: "TSCONFIG";
}
body.code-language .markdown-rendered pre[class~=language-git]::before {
  content: "GIT";
}
body.code-language .markdown-rendered pre[class~=language-csharp]::before {
  content: "CSHARP";
}
body.code-language .markdown-rendered pre[class~=language-csv]::before {
  content: "CSV";
}
body.code-language .markdown-rendered pre[class~=language-cue]::before {
  content: "CUE";
}
body.code-language .markdown-rendered pre[class~=language-nginx]::before {
  content: "NGINX";
}
body.code-language .markdown-rendered pre[class~=language-toml]::before {
  content: "TOML";
}
body.code-language .markdown-rendered pre[class~=language-kt]::before {
  content: "KT";
}
body.code-language .markdown-rendered pre[class~=language-go]::before {
  content: "GO";
}
body.code-language .markdown-rendered pre[class~=language-rust]::before {
  content: "RUST";
}
body.code-language .markdown-rendered pre[class~=language-vue]::before {
  content: "VUE";
}
body.code-language .markdown-rendered pre[class~=language-regex]::before {
  content: "REGEX";
}

.markdown-source-view.mod-cm6 .code-block-flair {
  padding-top: 0;
  padding-bottom: 0;
  color: var(--color-red);
  transition: var(--animation);
}
.markdown-source-view.mod-cm6 .code-block-flair:hover {
  background-color: var(--nav-item-background-hover);
}

body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.comment, .prolog, .doctype, .cdata), .cm-comment) {
  color: var(--code-comment);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.tag, .constant, .symbol, .deleted, .class-name, .maybe-class-name), .cm-tag) {
  color: var(--code-tag);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-punctuation, .cm-bracket, .cm-hr, .cm-operator) {
  color: var(--code-punctuation);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.boolean, .number), .cm-number) {
  color: var(--code-value);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.selector, .attr-name, .string, .char, .builtin, .inserted), .cm-qualifier, .cm-string, .cm-string-2, .cm-meta) {
  color: var(--code-string);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.entity, .parameter, .property, .property-access, .url, .variable), :is(.language-css, .style) .token.string,
.cm-link, .cm-def, .cm-number + .cm-variable) {
  color: var(--code-property);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.attr-value, .function, .class-name), .cm-property, .cm-attribute) {
  color: var(--code-function);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.keyword, .constant, .unit, .builtin, .atrule), .cm-keyword, .cm-builtin, .cm-type, .cm-atom) {
  color: var(--code-keyword);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.token:is(.regex, .important)) {
  color: var(--code-important);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable, .cm-variable-2, .cm-variable-3) {
  color: var(--code-base);
}
body.code-theme :is(.markdown-rendered, .markdown-source-view.mod-cm6) :is(.cm-variable-2, .cm-variable-3) {
  opacity: 0.7;
}

body.code-mac-style-header .markdown-rendered pre {
  border: none;
  padding-top: calc(var(--code-size) * var(--line-height-normal) * 1.5);
  padding-bottom: calc(var(--code-size) * var(--line-height-normal) * 0.5);
}
body.code-mac-style-header .markdown-rendered pre[class*=language-]::before {
  color: var(--setting-code-language-color, var(--accent-active));
}
body.code-mac-style-header .markdown-rendered pre::after {
  content: "";
  width: 100%;
  height: calc(var(--code-size) * var(--line-height-normal) * 1.1);
  background-color: var(--code-mac-style-header-bg);
  top: 0;
  left: 0;
  position: absolute;
}
body.code-mac-style-header .markdown-rendered pre code::before {
  content: "";
  width: calc(var(--code-size) - var(--size-2-1));
  height: calc(var(--code-size) - var(--size-2-1));
  position: absolute;
  left: var(--size-4-4);
  top: calc((var(--code-size) - var(--size-2-1)) * var(--line-height-normal) * 0.7 - var(--code-size) / 3);
  border-radius: 50%;
  z-index: 9;
  background-color: var(--color-red);
  box-shadow: var(--size-4-5) 0 0 0 #ffbb4e, calc(var(--size-4-5) * 2) 0 0 0 #51bc00;
}

body.code-line-number .markdown-source-view.mod-cm6 {
  counter-reset: code-line;
}
body.code-line-number .markdown-source-view.mod-cm6 .cm-line.HyperMD-codeblock {
  padding-left: var(--size-4-12);
}
body.code-line-number .markdown-source-view.mod-cm6 .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end)::before {
  counter-increment: code-line;
  content: counter(code-line);
  position: absolute;
  text-align: right;
  width: var(--size-4-8);
  left: 0;
  color: var(--accent-inactive);
}
body.code-line-number .markdown-source-view.mod-cm6 .cm-line.HyperMD-codeblock:not(.HyperMD-codeblock-begin):not(.HyperMD-codeblock-end).cm-active::before {
  color: var(--accent-active);
}
body.code-line-number .markdown-source-view.mod-cm6 .cm-line.HyperMD-codeblock-end {
  counter-reset: code-line;
}

/* ====== 光标 ====== */
:is(.markdown-source-view.mod-cm6 .cm-content, .mod-cm6 .cm-line, .fancy-cursor input.prompt-input) {
  caret-color: var(--text-accent);
}

/* ====== 内嵌文档 ====== */
.internal-embed.is-loaded:not(.image-embed) {
  transition: var(--animation);
  padding: var(--size-4-1) var(--size-2-1) !important;
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link) {
  top: 5px;
  padding: var(--size-2-3);
  border-radius: var(--radius-m);
  transition: var(--animation);
  color: var(--accent-active);
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed-link, .file-embed-link):hover {
  background-color: var(--nav-item-background-hover);
}
.internal-embed.is-loaded:not(.image-embed).mod-empty {
  border: var(--size-2-1) dotted var(--accent-inactive);
}
.internal-embed.is-loaded:not(.image-embed) .markdown-embed-title {
  text-align: center;
  line-height: 2.8;
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed, .file-embed) {
  border-radius: var(--radius-xl);
  transition: var(--animation);
  margin: 0;
  padding: 0;
  border: var(--block-outline-width) solid var(--accent-inactive);
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 0.8) calc(var(--font-text-size) * 1.5);
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed, .file-embed) .markdown-preview-view .markdown-preview-section {
  min-height: fit-content !important;
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed, .file-embed):hover {
  border-color: var(--accent-active);
}
.internal-embed.is-loaded:not(.image-embed) :is(.markdown-embed, .file-embed) .frontmatter + div {
  display: none;
}
.internal-embed.is-loaded:not(.image-embed) .markdown-embed-content {
  max-height: unset;
}
.internal-embed.is-loaded:not(.image-embed) svg.link {
  transform: rotate(90deg);
}

body.scrollbar-gutter-reserve.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  right: var(--size-4-3);
}

body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  position: absolute;
  right: var(--size-4-9);
  top: var(--size-2-1);
  z-index: 99;
  opacity: 0;
  transition: var(--animation);
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) * {
  font-size: 1rem;
  margin: 0;
  cursor: pointer;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-heading .markdown-preview-section > div:nth-child(2) *::after {
  content: none;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) .markdown-embed-title {
  opacity: 0;
  position: absolute;
  z-index: 999;
  width: fit-content;
  right: 28px;
  left: unset;
  font-size: 1rem;
  top: var(--size-2-3);
  line-height: 28px;
  height: 28px;
  padding: 0 var(--size-4-2);
  border-radius: var(--radius-m);
  transition: var(--animation);
  cursor: pointer;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover > div > .markdown-embed-heading .markdown-preview-section > div:nth-child(2) {
  opacity: 1;
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]):hover :is(.markdown-embed-title, .markdown-embed-link, .file-embed-link:hover svg) {
  opacity: 1;
  color: var(--text-normal);
}
body.embed-title-right-top .internal-embed.is-loaded:not([alt="#"]) :is(.markdown-embed, .file-embed) .markdown-preview-view {
  padding: calc(var(--font-text-size) * 2) calc(var(--font-text-size) * 1.5) calc(var(--font-text-size) * 1.4);
}

/* ======= 分隔符 ====== */
.markdown-rendered hr {
  margin-block-start: 2.4rem !important;
  margin-block-end: 2.4rem !important;
}

:is(.markdown-source-view.mod-cm6, .markdown-rendered) hr {
  overflow: initial;
  border: none;
  position: relative;
  height: var(--size-4-1);
  background-image: linear-gradient(to right, transparent 0%, hsla(var(--color-accent-hsl), 40%) 16%, hsla(var(--color-accent-hsl), 90%) 44%, transparent 44%, transparent 56%, hsla(var(--color-accent-hsl), 90%) 56%, hsla(var(--color-accent-hsl), 40%) 84%, transparent 100%);
}
:is(.markdown-source-view.mod-cm6, .markdown-rendered) hr::after {
  content: var(--hr-icon, "⭐");
  display: inline-block;
  font-family: var(--font-monospace);
  font-size: var(--font-ui-small);
  position: absolute;
  text-align: center;
  width: var(--input-height);
  height: var(--input-height);
  line-height: var(--input-height);
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%);
  color: var(--accent-active);
  background: var(--md-container-bg);
  border-radius: 50%;
}

/* ====== 图片 ====== */
.theme-dark img {
  opacity: 0.7;
  transition: var(--animation);
}
.theme-dark img:hover {
  opacity: 0.85;
}

img {
  border-radius: var(--radius-l);
}

/* ====== 链接 ====== */
:is(body, .print .markdown-rendered) {
  --link-decoration-hover: none;
  --link-external-decoration-hover: none;
  --link-color: var(--setting-link-internal-color, var(--color-blue));
  --link-color-hover: var(--text-accent);
  --link-external-color: var(
    --setting-link-external-color,
    var(--color-orange)
  );
  --link-external-color-hover: var(--text-accent);
  --link-unresolved-color: var(
    --setting-link-external-color,
    var(--color-orange)
  );
  --link-footnote: var(--color-purple);
}

@property --link-offset {
  syntax: "<length>";
  inherits: false;
  initial-value: 4px;
}
@property --link-thickness {
  syntax: "<length>";
  inherits: false;
  initial-value: 2px;
}
body.link-icon :is(a.external-link, .cm-link .cm-underline) {
  font-size: var(--font-text-size);
  text-underline-offset: var(--link-offset);
  color: var(--link-external-color) !important;
  text-decoration-line: underline !important;
  text-decoration-skip-ink: none;
  text-decoration-color: var(--link-external-color) !important;
  text-decoration-thickness: var(--link-thickness) !important;
  transition: --link-offset var(--animation), --link-thickness var(--animation), color var(--animation);
}
body.link-icon :is(a.external-link, .cm-link .cm-underline):hover, body.link-icon :is(a.external-link, .cm-link .cm-underline):focus {
  color: var(--text-on-accent) !important;
  --link-offset: calc(var(--font-text-size) * -1 - var(--size-4-4));
  --link-thickness: calc(var(--font-text-size) + 10px);
}
body.link-icon .cm-hmd-footnote .cm-underline {
  color: var(--link-footnote) !important;
  font-size: var(--footnote-size);
  text-decoration-color: var(--link-footnote) !important;
  pointer-events: none;
}
body.link-icon :is(a.internal-link, .cm-hmd-internal-link .cm-underline) {
  font-size: var(--font-text-size);
  text-underline-offset: var(--link-offset);
  color: var(--link-color) !important;
  text-decoration-line: underline !important;
  text-decoration-skip-ink: none;
  text-decoration-color: var(--link-color) !important;
  text-decoration-thickness: var(--link-thickness) !important;
  transition: --link-offset var(--animation), --link-thickness var(--animation), color var(--animation);
}
body.link-icon :is(a.internal-link, .cm-hmd-internal-link .cm-underline):hover, body.link-icon :is(a.internal-link, .cm-hmd-internal-link .cm-underline):focus {
  color: var(--text-on-accent) !important;
  --link-offset: calc(var(--font-text-size) * -1 - var(--size-4-4));
  --link-thickness: calc(var(--font-text-size) + 10px);
}
body.link-icon :is(:is(.markdown-source-view, .markdown-preview-view) a.internal-link,
.cm-hmd-internal-link .cm-underline)::before {
  content: "";
  display: inline-block;
  transform: translateY(var(--size-2-1));
  width: calc(var(--font-text-size) - var(--size-2-1));
  height: calc(var(--font-text-size) - var(--size-2-1));
  background-color: var(--link-color);
  -webkit-mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill=""><path d="M0 0h24v24H0V0z" fill="none"/><path d="M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"/></svg>');
}
body.link-icon :is(.cm-hmd-internal-link, .cm-link) {
  transition: color var(--animation);
}
body.link-icon .cm-url {
  color: var(--link-color) !important;
}
body.link-icon span.cm-formatting-link {
  color: var(--accent-active) !important;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) a.external-link {
  background-image: none;
  background-size: unset;
  padding-right: 0;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) span.external-link {
  display: none;
}
body.link-icon:not(.link-click-to-edit-in-live-preview) :is(:is(.markdown-source-view, .markdown-preview-view) a.external-link,
.cm-link:not(.cm-hmd-footnote) .cm-underline)::before {
  content: "";
  display: inline-block;
  transform: translateY(var(--size-2-1));
  width: calc(var(--font-text-size) - var(--size-4-1));
  height: calc(var(--font-text-size) - var(--size-4-1));
  margin-left: var(--size-2-1);
  margin-right: var(--size-2-1);
  background-color: var(--link-external-color);
  -webkit-mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="svg-icon lucide-link"><path d="M10 13a5 5 0 0 0 7.54.54l3-3a5 5 0 0 0-7.07-7.07l-1.72 1.71"></path><path d="M14 11a5 5 0 0 0-7.54-.54l-3 3a5 5 0 0 0 7.07 7.07l1.71-1.71"></path></svg>');
}

body.link-click-to-edit-in-live-preview :is(.cm-link .cm-underline, .cm-hmd-internal-link .cm-underline) {
  pointer-events: none;
}

/* ====== 列表 ======= */
.markdown-source-view.mod-cm6 .task-list-label {
  margin-left: calc(var(--size-2-1) * -1);
}

input[type=checkbox] {
  transition: var(--animation);
  border-width: var(--size-2-1);
}
input[type=checkbox]:checked:after {
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

.HyperMD-task-line .cm-indent::before {
  transform: translateX(0.25em) !important;
}

body :is(.markdown-source-view, .markdown-rendered, .print .markdown-rendered) {
  --list-bullet-base: var(--size-4-3);
  --list-bullet-size: calc(var(--font-text-size) - var(--list-bullet-base));
  --list-marker-color: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) - 8%)
  );
  --list-marker-color-alt: hsl(
    var(--accent-h),
    var(--accent-s),
    calc(var(--accent-l) - 8%)
  );
  --list-spacing: 0;
}
body :is(.markdown-rendered, .print .markdown-rendered) :is(ul, ol) {
  padding-inline-start: 2.1rem;
  margin: var(--size-2-1) 0;
}
body :is(.markdown-rendered, .print .markdown-rendered) :is(ul, ol) :is(ul, ol) {
  padding-inline-start: 2.1rem;
}
body :is(.markdown-rendered, .print .markdown-rendered) :is(ul, ol) li {
  margin: var(--size-4-2) auto;
  line-height: 1.8rem;
}
body :is(.markdown-rendered, .print .markdown-rendered) ul {
  padding-inline-start: 1.2rem;
}
body :is(.markdown-rendered, .print .markdown-rendered) ul.contains-task-list {
  padding-inline-start: 1.4rem;
  margin-inline-start: 0 !important;
}
body :is(.markdown-rendered, .print .markdown-rendered) ol li::marker {
  font-family: var(--font-monospace);
}
body :is(.markdown-rendered, .print .markdown-rendered) ol li .list-collapse-indicator {
  margin-left: -54px !important;
}
body :is(.markdown-rendered, .print .markdown-rendered) ul > li {
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) + 3px
  );
}
body :is(.markdown-rendered, .print .markdown-rendered) ul > li ul > li {
  --list-marker-color: transparent;
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base)
  );
  --list-bullet-border: 2px solid var(--list-marker-color-alt);
}
body :is(.markdown-rendered, .print .markdown-rendered) ul > li ul > li ul > li {
  --list-marker-color: var(--list-marker-color-alt);
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) - 1px
  );
  --list-bullet-radius: max(2px, calc(var(--list-bullet-size) / 3));
}
body :is(.markdown-rendered, .print .markdown-rendered) ul > li ul > li ul > li .list-bullet:after {
  transform: rotate(45deg);
}
body :is(.markdown-rendered, .print .markdown-rendered) ul > li ul > li ul > li ul > li {
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) - 1px
  );
  --list-marker-color: transparent;
  --list-bullet-border: var(--size-2-1) solid
    var(--list-marker-color-alt);
  --list-bullet-radius: max(
    var(--size-2-1),
    calc(var(--list-bullet-size) / 3)
  );
}
body :is(.markdown-rendered, .print .markdown-rendered).show-indentation-guide .contains-task-list .task-list-item-checkbox {
  margin-right: var(--size-4-2);
}
body :is(.markdown-rendered, .print .markdown-rendered).show-indentation-guide .contains-task-list .contains-task-list {
  margin-inline-start: 0.1rem !important;
}
body :is(.markdown-rendered, .print .markdown-rendered).show-indentation-guide .contains-task-list .contains-task-list::before {
  left: -1rem;
}
body :is(.markdown-rendered, .print .markdown-rendered).show-indentation-guide li > ul::before {
  left: -0.8rem;
}
body :is(.markdown-rendered, .print .markdown-rendered).show-indentation-guide li > ol::before {
  left: -1.55rem;
}
body .markdown-source-view.mod-cm6 .cm-fold-indicator .collapse-indicator {
  padding-right: var(--size-4-2);
}
body .markdown-source-view.mod-cm6 .cm-formatting-list {
  font-family: var(--font-monospace);
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line > .list-bullet:after {
  content: none;
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line-1 .list-bullet {
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) + 3px
  );
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line-2 .list-bullet {
  --list-marker-color: transparent;
  --list-bullet-size: calc(var(--font-text-size) - var(--list-bullet-base));
  --list-bullet-border: 2px solid var(--list-marker-color-alt);
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line-3 .list-bullet {
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) + 3px
  );
  --list-bullet-radius: max(2px, calc(var(--list-bullet-size) / 3));
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line-3 .list-bullet::after {
  transform: rotate(45deg);
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line:not(.HyperMD-list-line-1, .HyperMD-list-line-2, .HyperMD-list-line-3) .list-bullet {
  --list-bullet-size: calc(
    var(--font-text-size) - var(--list-bullet-base) - 1px
  );
  --list-marker-color: transparent;
  --list-bullet-border: 2px solid var(--list-marker-color-alt);
  --list-bullet-radius: max(3px, calc(var(--list-bullet-size) / 3));
}
body .markdown-source-view.mod-cm6 .HyperMD-list-line:not(.HyperMD-list-line-1, .HyperMD-list-line-2, .HyperMD-list-line-3) .list-bullet::after {
  transform: rotate(45deg);
}

/* ====== 引用 ====== */
:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
}

body.quote-theme :is(.markdown-source-view, .markdown-rendered) {
  --blockquote-border-thickness: var(--size-4-1);
  --quote-radius: max(
    calc(var(--blockquote-border-thickness) / 2),
    var(--radius-s)
  );
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote:not(.callout), .cm-blockquote-border)::before {
  width: var(--blockquote-border-thickness);
  border-left: none;
  background-color: var(--blockquote-border-color);
  border-radius: var(--blockquote-border-thickness);
  top: var(--blockquote-border-thickness);
  bottom: var(--blockquote-border-thickness);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(.HyperMD-quote:not(.callout).cm-active, .HyperMD-quote:not(.callout).cm-active .cm-blockquote-border)::before {
  background-color: transparent;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout) {
  border-top-left-radius: 0 !important;
  border-top-right-radius: 0 !important;
  border-bottom-left-radius: var(--quote-radius);
  border-bottom-right-radius: var(--quote-radius);
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout).cm-active:not(:active)::before {
  background-color: transparent;
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout)::before {
  left: calc(var(--blockquote-border-thickness));
}
body.quote-theme .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout):not(.cm-active) + .HyperMD-quote:not(.callout)::before {
  top: calc(var(--blockquote-border-thickness) * -3);
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) {
  border-top-left-radius: var(--quote-radius) !important;
  border-top-right-radius: var(--quote-radius) !important;
}
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote))::after,
body.quote-theme .markdown-source-view.mod-cm6 :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) .cm-quote.cm-formatting::after {
  content: none !important;
}
body.quote-theme :is(.HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-2:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-3:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-4:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-5:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-6:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-7:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8), .HyperMD-quote-2:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 2), .HyperMD-quote-3:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 3), .HyperMD-quote-4:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 4), .HyperMD-quote-5:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 5), .HyperMD-quote-6:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 6), .HyperMD-quote-7:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 7), .HyperMD-quote-8:not(.callout):not(.cm-active) + .HyperMD-quote-8:not(.callout) .cm-blockquote-border:nth-of-type(-n + 8))::before {
  top: calc(var(--blockquote-border-thickness) * -2);
}
body.quote-theme .markdown-rendered blockquote {
  background-color: var(--md-container-bg);
  border: none !important;
  border-radius: var(--radius-s);
  box-shadow: var(--shadow-s);
  margin-inline-end: 0;
  position: relative;
  margin-left: 0;
  margin-top: var(--size-4-2);
  margin-bottom: var(--size-4-2);
  padding-top: 0;
  padding-bottom: 0;
}
body.quote-theme .markdown-rendered blockquote p {
  padding-left: var(--blockquote-border-thickness);
  padding-right: var(--size-4-1);
}
body.quote-theme .markdown-rendered blockquote::after {
  content: "";
  position: absolute;
  left: var(--blockquote-border-thickness);
  top: var(--blockquote-border-thickness);
  border-radius: calc(var(--blockquote-border-thickness) / 2);
  height: calc(100% - var(--blockquote-border-thickness) * 2);
  width: var(--blockquote-border-thickness);
  background-color: var(--accent-active);
}
body.quote-theme .markdown-rendered blockquote blockquote {
  box-shadow: none;
  margin: 0;
}

/* fill active line corner */
body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout)::after,
body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout) .cm-quote.cm-formatting::after {
  content: "";
  position: absolute;
  display: inline-block;
  z-index: 9;
  height: var(--quote-radius);
  width: var(--quote-radius);
  top: calc(var(--blockquote-border-thickness) * -1);
  background-color: var(--md-container-bg);
}
body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout)::after {
  left: 0;
}
body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout) .cm-quote.cm-formatting::after {
  right: 0;
}
body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout).cm-active + .HyperMD-quote:not(.callout)::after, body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.callout).cm-active + .HyperMD-quote:not(.callout) .cm-quote.cm-formatting::after {
  background-color: var(--active-line);
}

/* fix bugs, corner fill cause wrap */
body.quote-mark.quote-theme :is(div:not(.HyperMD-quote-1) + .HyperMD-quote-1, .cm-content :first-child:is(.HyperMD-quote)) {
  text-indent: 1.2rem !important;
}
body.quote-mark.quote-theme blockquote::before, body.quote-mark.quote-theme :is(div:not(.HyperMD-quote-1) + .HyperMD-quote-1, .cm-content :first-child:is(.HyperMD-quote)):not(.cm-active) > .cm-formatting.cm-formatting-quote.cm-quote-1::before {
  position: absolute;
  font-size: 3rem;
  font-family: Source Code Pro;
  line-height: 1;
  content: "“" !important;
  background-color: transparent;
  color: var(--text-muted);
  top: calc(var(--font-text-size) * var(--line-height-normal) - 2.1428571429rem);
  transform: translateX(-1.32rem);
}

body.quote-mark.quote-theme .markdown-rendered blockquote {
  padding-left: 2.28rem;
}
body.quote-mark.quote-theme .markdown-rendered blockquote::before {
  transform: translateX(-1.62rem);
}

:is(body, .print .markdown-rendered) {
  --callout-radius: var(--radius-l);
}

/* ====== 表格 ====== */
:is(body, .print .markdown-rendered) {
  --table-radius: var(--radius-l);
  --table-outline-width: var(--size-2-1);
}

.markdown-preview-view table {
  overflow: hidden;
  resize: both;
}

:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table {
  width: 100% !important;
  margin: 1rem 0 !important;
  --table-column-first-border-width: var(--table-outline-width);
  --table-column-last-border-width: var(--table-outline-width);
  --table-row-last-border-width: var(--table-outline-width);
}
:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table thead th {
  --table-white-space: nowrap;
  border-top: var(--block-outline-width) solid var(--table-header-border-color);
}
:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table:hover :is(td, th):first-child {
  border-left-color: var(--accent-active);
}
:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table:hover :is(td, th):last-child {
  border-right-color: var(--accent-active);
}
:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table:hover thead th {
  border-top-color: var(--accent-active);
}
:is(.markdown-rendered, .markdown-source-view.mod-cm6.is-live-preview) table:hover tbody tr:last-child > td {
  border-bottom-color: var(--accent-active);
}

:is(.markdown-rendered, .cm-embed-block) table {
  border-collapse: initial !important;
  border-spacing: 0;
  --table-border-color: var(--accent-inactive);
  --table-header-background: var(--md-container-bg);
  --table-header-background-hover: var(--md-container-bg);
  --table-header-border-color: var(--accent-inactive);
  --table-header-weight: var(--font-bold);
  --table-column-max-width: 70%;
}
:is(.markdown-rendered, .cm-embed-block) table :is(th, td) {
  min-width: fit-content;
  transition: border-color var(--animation);
}
:is(.markdown-rendered, .cm-embed-block) table tr:first-child th:first-child {
  border-top-left-radius: var(--table-radius);
}
:is(.markdown-rendered, .cm-embed-block) table tr:first-child th:last-child {
  border-top-right-radius: var(--table-radius);
}
:is(.markdown-rendered, .cm-embed-block) table tr:last-child td:first-child {
  border-bottom-left-radius: var(--table-radius);
}
:is(.markdown-rendered, .cm-embed-block) table tr:last-child td:last-child {
  border-bottom-right-radius: var(--table-radius);
}

.cm-embed-block.cm-table-widget {
  border: none;
}
.cm-embed-block.cm-table-widget .edit-block-button {
  top: calc(var(--size-4-2) + 1rem);
  right: var(--size-2-3);
}

body.table-colorful .markdown-source-view table + .edit-block-button {
  color: var(--text-on-accent);
  --background-modifier-hover: var(--accent-inactive);
}
body.table-colorful .markdown-source-view table + .edit-block-button:hover {
  color: var(--accent-active);
}
body.table-colorful table {
  --table-header-color: var(--text-on-accent);
  --table-header-background: var(--accent-active);
  --table-header-background-hover: var(--accent-active);
}
body.table-colorful table tbody tr:nth-of-type(2n) {
  background-color: var(--md-container-bg);
}
body.table-colorful table th {
  border-top: var(--block-outline-width) solid var(--accent-active) !important;
  border-bottom: var(--block-outline-width) solid var(--accent-active);
}
body.table-colorful table th:first-child {
  border-left-color: var(--accent-active);
}
body.table-colorful table th:last-child {
  border-right-color: var(--accent-active);
}

/* ====== 标签 ====== */
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-1-default: hsl(
    calc(var(--accent-h) + (1 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-1-default: hsl(
    calc(var(--accent-h) + (1 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 1),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 2),
span.cm-hashtag:nth-of-type(12n + 2) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 1),
span.cm-hashtag-end:nth-of-type(12n
            + 2))) {
  background-color: var(--tag-1, var(--tag-1-default));
  color: var(--text-on-accent) !important;
}
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-2-default: hsl(
    calc(var(--accent-h) + (2 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-2-default: hsl(
    calc(var(--accent-h) + (2 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 2),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 4),
span.cm-hashtag:nth-of-type(12n + 4) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 3),
span.cm-hashtag-end:nth-of-type(12n
            + 4))) {
  background-color: var(--tag-2, var(--tag-2-default));
  color: var(--text-on-accent) !important;
}
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-3-default: hsl(
    calc(var(--accent-h) + (3 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-3-default: hsl(
    calc(var(--accent-h) + (3 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 3),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 6),
span.cm-hashtag:nth-of-type(12n + 6) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 5),
span.cm-hashtag-end:nth-of-type(12n
            + 6))) {
  background-color: var(--tag-3, var(--tag-3-default));
  color: var(--text-on-accent) !important;
}
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-4-default: hsl(
    calc(var(--accent-h) + (4 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-4-default: hsl(
    calc(var(--accent-h) + (4 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 4),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 8),
span.cm-hashtag:nth-of-type(12n + 8) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 7),
span.cm-hashtag-end:nth-of-type(12n
            + 8))) {
  background-color: var(--tag-4, var(--tag-4-default));
  color: var(--text-on-accent) !important;
}
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-5-default: hsl(
    calc(var(--accent-h) + (5 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-5-default: hsl(
    calc(var(--accent-h) + (5 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 5),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 10),
span.cm-hashtag:nth-of-type(12n + 10) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 9),
span.cm-hashtag-end:nth-of-type(12n
            + 10))) {
  background-color: var(--tag-5, var(--tag-5-default));
  color: var(--text-on-accent) !important;
}
:is(body.tag-colorful.theme-light, body.tag-colorful.theme-light .print) {
  --tag-6-default: hsl(
    calc(var(--accent-h) + (6 - 1) * 60),
    50%,
    60%
  );
}
:is(body.tag-colorful.theme-dark, body.tag-colorful.theme-dark .print) {
  --tag-6-default: hsl(
    calc(var(--accent-h) + (6 - 1) * 60),
    30%,
    40%
  );
}
body.tag-colorful :is(.markdown-preview-section > div a.tag:nth-of-type(6n + 6),
.HyperMD-list-line > :is(span.cm-hashtag:nth-of-type(12n
            + 12),
span.cm-hashtag:nth-of-type(12n + 12) + .cm-hashtag),
.cm-line > :is(span.cm-hashtag-begin:nth-of-type(12n
            + 11),
span.cm-hashtag-end:nth-of-type(12n
            + 12))) {
  background-color: var(--tag-6, var(--tag-6-default));
  color: var(--text-on-accent) !important;
}
body.tag-colorful .cm-line span.cm-hashtag {
  caret-color: var(--text-on-accent);
}

:is(body, .print .markdown-rendered) {
  --tag-padding-y: 0.1rem;
}

.cm-line span.cm-hashtag {
  vertical-align: baseline;
}

body.tag-click-to-edit .cm-line span.cm-hashtag:not(.cm-formatting) {
  pointer-events: none;
}

/* ====== 段落 ====== */
.markdown-rendered p {
  margin: var(--size-4-1) 0;
}

body mjx-container mjx-utext {
  font-family: var(--font-text) !important;
}

/* ====== latex 修复 ====== */
body.font-fix-latex mjx-container .TEX-I {
  font-family: MJXZERO, EMBED-TEX-I;
}

mjx-stretchy-h > mjx-ext > mjx-c::before {
  transform: scaleX(450) !important;
}

/* ====== 等宽字体 ====== */
body.font-maple {
  --font-monospace: var(--monospace-custom, "maplemono"),
    var(--font-monospace-override), var(--font-monospace-theme),
    var(--font-monospace-default);
}

/* ====== 文本 ======= */
.theme-light {
  --active-line: hsl(
    calc(var(--accent-h) - 4),
    calc(var(--accent-s) - 12%),
    calc(100% - (100% - var(--accent-l)) / 5)
  );
}

.theme-dark {
  --active-line: hsla(
    calc(var(--accent-h) - 24),
    18%,
    calc(var(--accent-l) / 4),
    95%
  );
}

body .markdown-source-view .cm-scroller .cm-line:not(.HyperMD-codeblock) {
  padding-left: var(--size-4-1);
  padding-right: var(--size-4-1);
}

body:not(.line-active-disable) .markdown-source-view .cm-scroller .cm-line.cm-active {
  background-color: var(--active-line);
  border-radius: var(--radius-s);
}

/* ======= 键盘 ====== */
kbd {
  user-select: none;
  border: var(--size-2-1) solid var(--accent-inactive);
  box-shadow: var(--shadow-s);
  border-radius: var(--size-2-3);
  transition: var(--animation);
}
kbd:hover {
  border-color: var(--accent-active);
}

::selection {
  text-decoration-line: none !important;
}

body :is(.markdown-source-view, .markdown-rendered) {
  --bold-color: var(--setting-text-bold-color, var(--color-red));
  --italic-color: var(--setting-text-italic-color, var(--color-red));
}

em,
.cm-em,
strong,
.cm-strong {
  text-decoration-line: underline;
  text-decoration-style: dotted;
  text-underline-offset: var(--size-4-1);
}

.workspace-leaf-content[data-type=markdown] .view-header .clickable-icon:hover {
  background-color: var(--background-modifier-hover);
}

body.tab-title-bar .workspace-leaf-content[data-type=markdown] .view-header {
  margin: var(--size-4-1);
  padding: 0 var(--size-2-3) !important;
  border: var(--size-2-1) solid var(--background-modifier-hover);
  border-radius: var(--radius-m);
  --file-header-font-size: calc(var(--font-ui-smaller) - var(--size-2-1));
  transition: var(--animation);
  width: calc(100% - var(--size-4-2));
}
body.tab-title-bar .workspace-leaf-content[data-type=markdown] .view-header .view-header-title-container:after {
  content: none;
}
body.tab-title-bar .workspace-leaf.mod-active .view-header {
  --background-primary: var(--background-secondary);
}
body.tab-title-bar.tab-title-bar-shadow .workspace-leaf.mod-active .view-header {
  box-shadow: 0 0 var(--size-4-1) var(--background-modifier-box-shadow);
}

/* ======= 标题 ====== */
body {
  --font-bold: bold;
  --h1-color: var(--setting-h1-color, var(--color-red));
  --h2-color: var(--setting-h2-color, var(--color-orange));
  --h3-color: var(--setting-h3-color, var(--color-green));
  --h4-color: var(--setting-h4-color, var(--color-blue));
  --h5-color: var(--setting-h5-color, var(--color-purple));
  --h6-color: var(--setting-h6-color, var(--color-cyan));
  --h1-size: calc(var(--font-text-size) * 1.6);
  --h2-size: calc(var(--font-text-size) * 1.5);
  --h3-size: calc(var(--font-text-size) * 1.4);
  --h4-size: calc(var(--font-text-size) * 1.3);
  --h5-size: calc(var(--font-text-size) * 1.2);
  --h6-size: calc(var(--font-text-size) * 1.1);
  --h1-weight: var(--font-bold);
  --h2-weight: var(--font-bold);
  --h3-weight: var(--font-bold);
  --h4-weight: var(--font-bold);
  --h5-weight: var(--font-bold);
  --h6-weight: var(--font-bold);
  --h1-line-height: var(--line-height-normal);
  --h2-line-height: var(--line-height-normal);
  --h3-line-height: var(--line-height-normal);
  --h4-line-height: var(--line-height-normal);
  --h5-line-height: var(--line-height-normal);
  --h6-line-height: var(--line-height-normal);
}

.theme-light {
  --header-indicator-color-h1: var(--h1-color);
  --header-indicator-bg-h1: transparent;
  --header-indicator-color-h2: var(--h2-color);
  --header-indicator-bg-h2: transparent;
  --header-indicator-color-h3: var(--h3-color);
  --header-indicator-bg-h3: transparent;
  --header-indicator-color-h4: var(--h4-color);
  --header-indicator-bg-h4: transparent;
  --header-indicator-color-h5: var(--h5-color);
  --header-indicator-bg-h5: transparent;
  --header-indicator-color-h6: var(--h6-color);
  --header-indicator-bg-h6: transparent;
}

.theme-dark {
  --header-indicator-color-h1: white;
  --header-indicator-bg-h1: var(--h1-color);
  --header-indicator-color-h2: white;
  --header-indicator-bg-h2: var(--h2-color);
  --header-indicator-color-h3: white;
  --header-indicator-bg-h3: var(--h3-color);
  --header-indicator-color-h4: white;
  --header-indicator-bg-h4: var(--h4-color);
  --header-indicator-color-h5: white;
  --header-indicator-bg-h5: var(--h5-color);
  --header-indicator-color-h6: white;
  --header-indicator-bg-h6: var(--h6-color);
}

:is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview :is(.HyperMD-header-1, .HyperMD-header-2, .HyperMD-header-3, .HyperMD-header-4, .HyperMD-header-5, .HyperMD-header-6)) {
  position: relative;
  margin: 0;
}
:is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview :is(.HyperMD-header-1, .HyperMD-header-2, .HyperMD-header-3, .HyperMD-header-4, .HyperMD-header-5, .HyperMD-header-6))::before {
  position: absolute;
  border-radius: var(--radius-s);
  z-index: 1;
  padding: 0.1rem;
  width: fit-content;
  font-size: 0.6rem;
  line-height: 1;
  vertical-align: middle;
  letter-spacing: 0.05rem;
  font-family: var(--font-text);
  opacity: 0;
  transition: var(--animation);
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-4-6) * -1);
}
:is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview :is(.HyperMD-header-1, .HyperMD-header-2, .HyperMD-header-3, .HyperMD-header-4, .HyperMD-header-5, .HyperMD-header-6)):hover::before {
  opacity: 0.8;
}

body.heading-icon-fix :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview :is(.HyperMD-header-1, .HyperMD-header-2, .HyperMD-header-3, .HyperMD-header-4, .HyperMD-header-5, .HyperMD-header-6))::before {
  opacity: 0.6;
  filter: grayscale(1);
  border-color: transparent;
  background-color: transparent;
}

body.heading-icon-only-text :is(div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6),
.markdown-source-view.mod-cm6.is-live-preview :is(.HyperMD-header-1, .HyperMD-header-2, .HyperMD-header-3, .HyperMD-header-4, .HyperMD-header-5, .HyperMD-header-6))::before {
  border-color: var(--background-primary) !important;
  background-color: var(--background-primary) !important;
  color: var(--text-muted);
}

div.markdown-reading-view > div > div > div > :is(h1, h2, h3, h4, h5, h6)::before {
  left: calc(var(--size-4-6) * -1) !important;
}

:not(.popup) :is(h1, h2, h3, h4, h5, h6) {
  margin: calc(var(--font-text-size) / 4) 0;
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h1,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1):hover::before,
:is(div.markdown-reading-view > div > div > div > h1,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1)::before {
  border: var(--size-2-1) solid var(--h1-color);
  content: "H1";
  color: var(--header-indicator-color-h1);
  background-color: var(--header-indicator-bg-h1);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h1,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-1):hover::before {
  color: var(--header-indicator-bg-h1);
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h2,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2):hover::before,
:is(div.markdown-reading-view > div > div > div > h2,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2)::before {
  border: var(--size-2-1) solid var(--h2-color);
  content: "H2";
  color: var(--header-indicator-color-h2);
  background-color: var(--header-indicator-bg-h2);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h2,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-2):hover::before {
  color: var(--header-indicator-bg-h2);
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h3,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3):hover::before,
:is(div.markdown-reading-view > div > div > div > h3,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3)::before {
  border: var(--size-2-1) solid var(--h3-color);
  content: "H3";
  color: var(--header-indicator-color-h3);
  background-color: var(--header-indicator-bg-h3);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h3,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-3):hover::before {
  color: var(--header-indicator-bg-h3);
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h4,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4):hover::before,
:is(div.markdown-reading-view > div > div > div > h4,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4)::before {
  border: var(--size-2-1) solid var(--h4-color);
  content: "H4";
  color: var(--header-indicator-color-h4);
  background-color: var(--header-indicator-bg-h4);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h4,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-4):hover::before {
  color: var(--header-indicator-bg-h4);
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h5,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5):hover::before,
:is(div.markdown-reading-view > div > div > div > h5,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5)::before {
  border: var(--size-2-1) solid var(--h5-color);
  content: "H5";
  color: var(--header-indicator-color-h5);
  background-color: var(--header-indicator-bg-h5);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h5,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-5):hover::before {
  color: var(--header-indicator-bg-h5);
}

body.heading-fix :is(div.markdown-reading-view > div > div > div > h6,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6):hover::before,
:is(div.markdown-reading-view > div > div > div > h6,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6)::before {
  border: var(--size-2-1) solid var(--h6-color);
  content: "H6";
  color: var(--header-indicator-color-h6);
  background-color: var(--header-indicator-bg-h6);
  filter: none;
}

body.heading-fix.heading-only-text.theme-dark :is(div.markdown-reading-view > div > div > div > h6,
.markdown-source-view.mod-cm6.is-live-preview .HyperMD-header-6):hover::before {
  color: var(--header-indicator-bg-h6);
}

.heading-collapse-indicator {
  position: absolute;
  z-index: 99;
  height: var(--size-4-4);
  width: var(--size-4-5);
  top: 50%;
  transform: translateY(-50%);
  left: calc(var(--size-2-1) * -1);
  padding: 0 !important;
  --cursor: pointer;
}
.heading-collapse-indicator svg {
  display: none;
}

.HyperMD-header {
  position: relative;
}
.HyperMD-header .cm-fold-indicator .collapse-indicator {
  --cursor: pointer;
  z-index: 99;
  opacity: 0 !important;
  width: var(--size-4-6);
  height: var(--size-4-4) !important;
  left: calc(var(--size-2-1) - var(--size-4-8));
  top: 50% !important;
  transform: translateY(-50%) !important;
}

.cm-formatting.cm-formatting-header {
  filter: grayscale(70%);
  font-size: 1rem !important;
  font-weight: 400 !important;
  line-height: 1.2rem;
}

h1 {
  text-align: center;
}

body.heading-h2-underline h2,
body.heading-h2-underline .HyperMD-header-2 {
  position: relative;
}
body.heading-h2-underline h2::after,
body.heading-h2-underline .HyperMD-header-2::after {
  content: "";
  position: absolute;
  height: var(--size-4-1);
  width: 100%;
  bottom: calc(var(--font-text-size) * var(--line-height-normal) * 0.2 - var(--size-2-1));
  border-radius: var(--size-2-1);
  background-image: linear-gradient(to right, var(--h2-color) 30%, transparent 70%);
}
body.heading-h2-underline h2::after {
  left: 0;
}
body.heading-h2-underline .HyperMD-header-2::after {
  left: var(--size-4-1);
}
body.heading-h2-underline .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}

body.heading-h6-variant :is(h6, .cm-header-6) {
  font-variant: small-caps;
}

/* ====== better command palette ======*/
.better-command-palette p.better-command-palette-title {
  margin: var(--size-4-3) var(--size-4-6);
}

/* ====== 日历 ====== */
body.calendar-swap-year-month #calendar-container .nav {
  padding-left: var(--size-4-1);
}
body.calendar-swap-year-month #calendar-container .nav .title {
  display: flex;
  flex-direction: row-reverse;
  font-weight: normal;
  font-size: 1.2rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year {
  color: var(--text-normal);
  letter-spacing: 0.1rem;
}
body.calendar-swap-year-month #calendar-container .nav .title .year::after {
  content: var(--calendar-year-suffix, "年");
  margin-right: var(--size-2-1);
  margin-left: var(--size-2-1);
}
body.calendar-swap-year-month #calendar-container .nav .title .month {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
  letter-spacing: 0.1rem;
  font-weight: bold;
  color: var(--accent-active);
}

#calendar-container thead {
  border-bottom: var(--size-2-1) solid var(--accent-active);
}
#calendar-container .title {
  line-height: 100%;
}
#calendar-container .title .year {
  height: var(--size-4-6);
  line-height: var(--size-4-6);
}

/* ====== excalidraw ====== */
.excalidraw .popover {
  border-radius: var(--radius-m) !important;
  border: 1px solid var(--background-modifier-border-hover) !important;
  box-shadow: var(--shadow-s) !important;
}
.excalidraw .context-menu {
  border-radius: var(--radius-m) !important;
  border: none !important;
  padding: 5px 0 !important;
  background-color: var(--background-secondary) !important;
  margin: 0 !important;
}
.excalidraw .context-menu li {
  padding: var(--size-4-1) !important;
}
.excalidraw .context-menu li button {
  border-radius: var(--size-2-3);
  padding: var(--size-4-1);
  padding-left: var(--size-4-6);
}
.excalidraw .context-menu li button > div {
  margin-inline-end: var(--size-4-1) !important;
}
.excalidraw .context-menu li button kbd {
  border: 0;
  box-shadow: none;
}
.excalidraw .context-menu .context-menu-option-separator {
  border: 1px solid var(--background-modifier-border);
  margin: var(--size-4-1) 0 !important;
}
.excalidraw .context-menu .context-menu-option:hover {
  background-color: var(--nav-item-background-hover);
  color: var(--text-normal);
}
.excalidraw .context-menu .context-menu-option:hover kbd {
  background-color: var(--background-primary) !important;
}
.excalidraw h3 {
  font-weight: bold !important;
  color: inherit !important;
}
.excalidraw h3::before {
  content: none;
}
.excalidraw .panelColumn :is(h3, legend, .control-label) {
  font-size: 0.9rem !important;
}

/* ====== style setting ====== */
.style-settings-heading + .style-settings-container {
  padding: var(--size-4-1) 0 var(--size-4-1) var(--size-4-8);
  border-left: var(--nav-indentation-guide-width) solid var(--nav-indentation-guide-color);
  transition: var(--animation);
}
.style-settings-heading + .style-settings-container:hover {
  border-color: var(--accent-active);
}

.style-settings-heading[data-level="0"] {
  margin-bottom: 18px;
}
.style-settings-heading[data-level="0"] + .style-settings-container {
  padding-left: var(--size-4-8);
}

:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download) {
  transition: var(--animation);
  text-decoration: none;
  height: var(--input-height);
  font-size: var(--font-ui-small);
  font-family: inherit;
  font-weight: var(--input-font-weight);
  color: var(--text-normal) !important;
  line-height: var(--line-height-normal);
  padding: 0 0.8em;
  max-width: 100%;
  box-sizing: border-box;
  margin: 0;
  border: 0;
  box-shadow: var(--input-shadow);
  border-radius: var(--input-radius);
  background-color: var(--interactive-normal);
}
:is(.style-settings-import, .style-settings-export, .style-settings-copy, .style-settings-download):hover {
  box-shadow: var(--input-shadow-hover);
  background-color: var(--interactive-hover);
}

.modal-style-settings {
  padding-bottom: var(--size-4-6);
}
.modal-style-settings .modal-content {
  padding-bottom: var(--size-4-6);
}
.modal-style-settings .modal-content .setting-item-control {
  position: absolute;
  bottom: var(--size-4-3);
  right: var(--size-4-5);
}
.modal-style-settings .modal-content textarea {
  resize: none;
}

.style-settings-container .themed-color-wrapper .pickr-reset > button {
  padding: var(--size-2-3);
}
.style-settings-container .setting-item:first-child {
  padding-top: inherit;
}
.style-settings-container .setting-item:is([data-id^=setting-accent-hue]) input.slider {
  height: 0.8em;
  --hue-slider-sat: 70%;
  --hue-slider-br: 50%;
  background: linear-gradient(to right, hsl(0, var(--hue-slider-sat), var(--hue-slider-br)), hsl(30, var(--hue-slider-sat), var(--hue-slider-br)), hsl(60, var(--hue-slider-sat), var(--hue-slider-br)), hsl(90, var(--hue-slider-sat), var(--hue-slider-br)), hsl(120, var(--hue-slider-sat), var(--hue-slider-br)), hsl(150, var(--hue-slider-sat), var(--hue-slider-br)), hsl(180, var(--hue-slider-sat), var(--hue-slider-br)), hsl(210, var(--hue-slider-sat), var(--hue-slider-br)), hsl(240, var(--hue-slider-sat), var(--hue-slider-br)), hsl(270, var(--hue-slider-sat), var(--hue-slider-br)), hsl(300, var(--hue-slider-sat), var(--hue-slider-br)), hsl(330, var(--hue-slider-sat), var(--hue-slider-br)), hsl(360, var(--hue-slider-sat), var(--hue-slider-br)));
  border-radius: var(--size-2-1);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-hue]) input.slider::-webkit-slider-thumb {
  height: 1.6em;
  width: var(--size-4-1);
  background-color: var(--text-muted);
  position: relative;
  top: 50%;
  transform: translateY(-50%);
  border-radius: var(--radius-m);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-hue]) input.slider::-webkit-slider-thumb:hover {
  box-shadow: none;
  background-color: var(--text-normal);
}
.style-settings-container .setting-item:is([data-id^=setting-accent-hue]) .setting-item-control::before {
  content: " ";
  font-size: 0.7em;
  text-align: center;
  white-space: pre-wrap;
  height: 1.6em;
  width: 1.6em;
  color: var(--text-normal);
  background-color: hsl(var(--setting-accent-hue-light, 116), 32%, 58%);
  position: relative;
  right: 1em;
  border-radius: var(--radius-s);
}
.style-settings-container .setting-item[data-id=setting-accent-hue-dark] .setting-item-control::before {
  background-color: hsl(var(--setting-accent-hue-dark, 207), 32%, 58%);
}

/* hide option */
body:not(.calendar-swap-year-month) .setting-item[data-id=calendar-year-suffix],
body:not(.quote-theme) .setting-item:is([data-id=quote-mark], [data-id=quote-break-all]),
body:not(.scrollbar-smooth) .setting-item[data-id=scrollbar-smooth-editor],
body:not(.tab-title-bar) .setting-item[data-id=tab-title-bar-shadow],
body:not(.loading-text) .setting-item[data-id=loading-text-content],
body:not(.code-language) .setting-item[data-id=setting-code-language-color],
body:not(.color-use-custom-color) .setting-item[data-id^=accent-hue],
body:not(.tag-colorful) .setting-item[data-id=tag-colorful-setting] {
  display: none;
}

/* ====== 文档内搜索框 ====== */
.obsidian-search-match-highlight {
  background-color: var(--background-secondary);
}

.document-search-container {
  background-color: var(--background-primary);
  position: absolute;
  top: calc(var(--header-height) + var(--size-4-4));
  right: var(--size-4-4);
  border-radius: var(--size-4-2);
  padding: var(--size-2-3) var(--size-4-1) var(--size-2-3) 0;
  height: fit-content;
  border: var(--size-2-1) solid var(--frame-outline-color);
  box-shadow: var(--shadow-s);
  margin: 0;
}
.document-search-container :is(.document-search, .document-replace) {
  align-items: center;
  padding: 0;
}
.document-search-container :is(.document-search-input, .document-replace-input) {
  margin-left: var(--size-2-3);
}
.document-search-container .document-search-close-button {
  position: relative;
  top: 0;
}

body.search-internal-disable-select-all .document-search-container .document-search-buttons button:nth-child(3) {
  display: none;
}

body.search-internal-expand-on-focus :is(.document-search-input, .document-replace-input) {
  margin-left: var(--size-2-3);
  width: 100px;
  transition: var(--animation);
}
body.search-internal-expand-on-focus .document-search-input:focus {
  width: 180px;
}
body.search-internal-expand-on-focus .document-replace-input:focus {
  width: 220px;
}

/* ====== 文件管理器 ====== */
body {
  --folder-color-rgb: 245, 180, 0;
  --folder-color: rgb(var(--setting-color-dirs, var(--folder-color-rgb)));
  --folder-hover-color: rgba(
    var(--setting-color-dirs, var(--folder-color-rgb)),
    0.24
  );
  --nav-item-size: 14px;
  --line-height-tight: 1.6;
  --nav-indentation-guide-width: 1.8px;
  --nav-item-background-hover: var(--background-modifier-hover);
  --nav-item-background-active: var(--accent-active);
}

.theme-light {
  --folder-inactive: 85%;
}

.theme-dark {
  --folder-inactive: 70%;
}

.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root {
  padding-top: var(--size-4-2);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root > .nav-folder-title {
  display: none;
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-title {
  padding-left: var(--size-4-1);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-title:hover {
  background-color: var(--folder-hover-color);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder > .nav-folder-children {
  transition: var(--animation);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder > .nav-folder-children:hover {
  border-color: var(--accent-active);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-collapse-indicator {
  margin-right: var(--size-4-2);
  cursor: pointer;
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-collapse-indicator svg {
  line-height: var(--line-height-tight);
  width: 1rem;
  height: 1rem;
  background-color: var(--folder-color);
  display: inline-block;
  margin-bottom: var(--size-4-1);
  -webkit-mask-repeat: no-repeat;
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 42 42"><g fill="none"><path d="M24.833 12.5H40.25a3.75 3.75 0 0 1 3.745 3.55l.005.2v19a3.75 3.75 0 0 1-3.55 3.745l-.2.005H7.75a3.75 3.75 0 0 1-3.745-3.55L4 35.25V18.999L17.804 19l.226-.007a3.75 3.75 0 0 0 2.547-1.219l.147-.172l4.109-5.102zM17.061 9c.832 0 1.639.277 2.294.784l.175.144l2.444 2.138l-3.197 3.968l-.094.105c-.2.197-.46.322-.739.353l-.14.008L4 16.499V12.75a3.75 3.75 0 0 1 3.55-3.745L7.75 9h9.31z" fill="currentColor"></path></g></svg>');
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder-collapse-indicator svg path {
  display: none;
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-folder.is-collapsed .collapse-icon svg.svg-icon {
  transform: none;
  filter: brightness(var(--folder-inactive));
  transition: var(--animation);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title {
  padding-left: var(--size-4-1);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title-content:first-child::before {
  content: " ";
  display: inline-block;
  width: 1rem;
  opacity: 0.8;
  height: 1rem;
  left: var(--size-4-1);
  margin-right: var(--size-4-1);
  transform: translateY(20%);
  background-size: contain;
  background-repeat: no-repeat;
  background-position: center center;
  background-color: var(--text-accent);
  -webkit-mask-image: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill=""><path d="M0 0h24v24H0V0z" fill="none"/><path d="M8 16h8v2H8zm0-4h8v2H8zm6-10H6c-1.1 0-2 .9-2 2v16c0 1.1.89 2 1.99 2H18c1.1 0 2-.9 2-2V8l-6-6zm4 18H6V4h7v5h5v11z"/></svg>');
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active {
  color: var(--text-on-accent);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active .nav-file-title-content:first-child::before {
  background-color: var(--text-on-accent);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-tag {
  font-size: 0.6rem;
  margin-left: 0;
  margin-right: var(--size-4-2);
  line-height: 2;
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title .nav-file-tag {
  background-color: var(--nav-item-background-active);
  color: var(--text-on-accent);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title.is-active .nav-file-tag {
  background-color: var(--background-secondary);
  color: var(--accent-active);
}
.workspace-leaf-content[data-type=file-explorer] .nav-files-container .mod-root .nav-file-title-content + .nav-file-tag {
  margin-left: var(--size-2-3);
}

/* ====== 加载图 ====== */
body .progress-bar-line, body .progress-bar-subline {
  display: none;
}
body .progress-bar-message {
  visibility: hidden;
}

body.loading-default .progress-bar-line, body.loading-default .progress-bar-subline {
  display: inherit;
}
body.loading-default .progress-bar-message {
  visibility: visible;
}

body.loading-text .progress-bar-message {
  visibility: hidden;
}
body.loading-text .progress-bar-message::before {
  all: initial;
  font-family: var(--font-interface);
  font-size: 3rem;
  content: var(--loading-text-content, "快乐摸鱼中...............");
  display: block;
  visibility: visible !important;
  overflow: hidden;
  white-space: nowrap;
  border-right: 0.07em solid;
  animation: typing-style 2s steps(12), cursor-blink 0.3s step-end infinite alternate;
  transform: translateZ(0);
  will-change: transform;
}

@keyframes cursor-blink {
  50% {
    border-color: transparent;
  }
}
@keyframes typing-style {
  0% {
    width: 0;
  }
  100% {
    width: 20ch;
  }
}
/* ====== 弹出面板 ====== */
body {
  --modal-width: min(90vw, var(--modal-max-width));
  --modal-height: min(85vh, var(--modal-max-height));
}

:is(.horizontal-tab-nav-item, .vertical-tab-nav-item).is-active {
  background-color: var(--nav-item-background-active) !important;
}

:is(.document-search-close-button, .modal-close-button) {
  height: var(--input-height);
  width: var(--input-height);
}
:is(.document-search-close-button, .modal-close-button)::before {
  content: "";
  -webkit-mask: url('data:image/svg+xml;utf8,<svg xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" viewBox="0 0 30 30"><g transform="matrix(0.7071067094802856,-0.7071067094802856,0.7071067094802856,0.7071067094802856,-3.5424977926304564,6.277729735826142)"><rect x="5.806640625" y="7.4150390625" width="2" height="24" rx="1" fill="currentColor"/></g><g style="mix-blend-mode:passthrough" transform="matrix(0.7071067094802856,0.7071067094802856,-0.7071067094802856,0.7071067094802856,10.914602712669875,-14.349200366239529)"><rect x="22.7783203125" y="6.00048828125" width="2" height="24" rx="1" fill="currentColor"/></g></svg>');
  position: absolute;
  background-color: var(--accent-active);
  width: calc(var(--input-height) * 2 / 3);
  height: calc(var(--input-height) * 2 / 3);
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}
:is(.document-search-close-button, .modal-close-button):hover {
  background-color: var(--accent-active);
}
:is(.document-search-close-button, .modal-close-button):hover::before {
  background-color: var(--text-on-accent);
}

body.setting-header .modal-container .mod-settings .modal-content {
  background-color: var(--frame-background-color);
}
body.setting-header .modal-container .mod-settings .modal-content .vertical-tab-header {
  border-top: 1px solid var(--divider-color);
  margin-top: var(--size-4-12);
  padding-top: 0;
}
body.setting-header .modal-container .mod-settings .modal-content .vertical-tab-content-container {
  padding-top: var(--size-4-12);
}
body.setting-header .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content {
  border-top: 1px solid var(--divider-color);
  padding-top: var(--size-4-6);
  padding-right: var(--size-4-8);
}
body.setting-header .modal-container .mod-settings .modal-content .vertical-tab-content-container .vertical-tab-content h2 {
  font-size: var(--h2-size);
  font-weight: var(--h2-weight);
}
body.setting-header .modal-container .mod-settings .modal-content .settings-search-container {
  padding: 0;
}
body.setting-header .modal-container .mod-settings .modal-content .settings-search-container .settings-search-input {
  position: fixed;
  top: calc(50vh - var(--modal-height) / 2 + var(--size-2-3));
  left: calc(50vw - var(--modal-width) / 2 + var(--size-2-3));
  width: calc(clamp(180px, var(--modal-width) / 4, 250px) - var(--size-4-3) * 1);
}
body.setting-header .modal-container .mod-settings .modal-content .hotkey-search-container {
  top: calc(50vh - var(--modal-height) / 2 - var(--size-4-3) + 22px);
  right: calc(50vw - var(--modal-width) / 2 + var(--size-4-12));
  position: fixed;
}
body.setting-header .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item {
  padding: 0;
}
body.setting-header .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-info {
  display: none;
}
body.setting-header .modal-container .mod-settings .modal-content .plugin-list-plugins > .setting-item .setting-item-control {
  display: block;
  position: fixed;
  top: calc(50vh - var(--modal-height) / 2 - var(--size-4-3) + 22px);
  right: calc(50vw - var(--modal-width) / 2 + var(--size-4-12));
}

select,
.dropdown,
button {
  transition: var(--animation);
}

.modal-container .modal-close-button {
  top: 9px;
  right: 9px !important;
}
.modal-container :is(.mod-community-plugin, .mod-community-theme) .community-modal-sidebar .setting-item:first-child {
  max-width: var(--modal-community-sidebar-width);
}
.modal-container .mod-settings .modal-content .setting-hotkey {
  box-shadow: var(--shadow-s);
  border: 2px solid var(--accent-inactive);
  border-radius: var(--size-2-3);
  font-size: var(--font-ui-smaller);
  padding: 0.05rem 0.5rem;
  transition: var(--animation);
}
.modal-container .mod-settings .modal-content .setting-hotkey .setting-hotkey-icon {
  margin-right: -0.25rem;
}
.modal-container .mod-settings .modal-content .setting-hotkey:hover {
  border-color: var(--accent-active);
}
.modal-container .mod-settings .modal-content .setting-hotkey.mod-active {
  color: var(--text-faint);
  background-color: var(--frame-background-color);
}
.modal-container .mod-settings .modal-content .setting-hotkey:not(.has-conflict):not(.mod-active) {
  background-color: var(--code-background);
}
.modal-container .mod-settings .modal-content .setting-item-heading .setting-item-name {
  font-weight: bold;
  font-size: var(--font-ui-medium);
}

body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group {
  padding-bottom: 0;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title {
  color: var(--text-accent);
  font-size: var(--font-text-size);
  position: relative;
}
body.setting-group-title .modal-container .mod-settings .modal-content .vertical-tab-header-group-title::before {
  content: "";
  position: absolute;
  height: calc(100% - var(--size-4-3));
  width: var(--size-4-1);
  top: var(--size-2-3);
  left: calc(var(--size-4-1) * -1);
  background-color: var(--accent-active);
  border-radius: var(--size-2-1);
}

/* ====== 大纲 ====== */
body {
  /* 引导线粗细 */
  --outline-guideline-width: var(--size-2-1);
  /* 引导线颜色 */
  --outline-guideline-color: var(--accent-active);
  /* 一行高度 */
  --outline-item-height: calc(var(--nav-item-size) * 1.8);
}

.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item {
  position: relative;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-self {
  position: relative;
  margin-bottom: 0;
  white-space: nowrap;
  margin-top: -1px; /* fix item gap */
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-self .tree-item-inner {
  padding-left: var(--size-4-4);
  overflow: hidden;
  text-overflow: ellipsis;
  height: var(--outline-item-height);
  line-height: var(--outline-item-height);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-self .tree-item-inner::before {
  content: "";
  width: var(--size-4-1);
  height: var(--size-4-1);
  border: var(--size-2-1) solid var(--outline-guideline-color);
  border-radius: 50%;
  position: absolute;
  left: 7px;
  top: 50%;
  transform: translateY(-50%);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-self .tree-item-icon ~ .tree-item-inner {
  padding-left: var(--size-4-1);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-self .tree-item-icon ~ .tree-item-inner::before {
  content: none;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item.is-collapsed .tree-item-icon::before {
  box-shadow: 0 0 0 var(--size-4-1) var(--background-modifier-hover);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item::after {
  content: "";
  width: var(--outline-guideline-width);
  position: absolute;
  background-color: transparent;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -10px;
  height: calc(100% - var(--outline-item-height) + var(--size-4-8));
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-icon {
  cursor: pointer;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-icon::before {
  width: var(--size-4-2);
  height: var(--size-4-2);
  background-color: var(--outline-guideline-color);
  border-radius: 50%;
  position: absolute;
  left: 7px;
  top: 50%;
  transform: translateY(-50%);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item-icon svg path {
  display: none;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item:hover > .tree-item-children > .tree-item::after {
  background-color: var(--outline-guideline-color);
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item:hover > .tree-item-self:hover + .tree-item-children .tree-item::after {
  background-color: transparent;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item:hover > .tree-item-children > .tree-item:hover::after, .workspace-leaf-content[data-type=outline] .view-content .outline .tree-item:hover > .tree-item-children > .tree-item:hover ~ .tree-item::after {
  background-color: transparent;
}
.workspace-leaf-content[data-type=outline] .view-content .outline .tree-item:hover > .tree-item-children > .tree-item:hover::before {
  content: "";
  position: absolute;
  top: calc(var(--outline-item-height) / 2 * -1);
  left: -10px;
  bottom: calc(100% - (var(--outline-item-height) + var(--size-4-2)) / 2 - 1px);
  width: var(--size-4-4);
  border-bottom-left-radius: var(--radius-m);
  border-bottom: var(--outline-guideline-width) solid var(--outline-guideline-color);
  border-left: var(--outline-guideline-width) solid var(--outline-guideline-color);
}
.workspace-leaf-content[data-type=outline] .view-content .outline :is(.tree-item-children, .tree-item-self .tree-item-self) {
  padding-left: 0;
  margin-left: var(--size-4-5);
  border-left: none;
}

/* ====== 滚动条 ====== */
/* ! overflow: overlay is deprecated */
body.scrollbar-gutter-overlay :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) {
  overflow-y: overlay;
}
body.scrollbar-gutter-overlay .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container {
  overflow-x: overlay;
}

body.scrollbar-gutter-reserve :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) {
  scrollbar-gutter: stable;
}

body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) {
  color: transparent;
  transition: color var(--animation);
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items):hover {
  color: hsla(var(--color-accent-hsl), 24%);
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) > :not(h1, h2, h3, h4, h5, h6) {
  color: var(--text-normal);
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) > .search-empty-state {
  color: var(--text-faint);
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items)::-webkit-scrollbar {
  width: var(--size-4-3) !important;
  height: var(--size-4-3) !important;
  background-color: transparent !important;
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items)::-webkit-scrollbar-track {
  background-color: transparent !important;
  box-shadow: none !important;
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items)::-webkit-scrollbar-thumb {
  box-shadow: inset 0 0 0 10px !important;
  border-radius: var(--size-2-3) !important;
  background-clip: content-box;
  background-color: transparent !important;
  border: 3.6px solid transparent !important;
}
body.scrollbar-hover-animation :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items)::-webkit-scrollbar-thumb:active {
  background-color: hsla(var(--color-accent-hsl), 64%) !important;
}

.popover.hover-popover > .markdown-embed > .markdown-embed-content > .markdown-preview-view {
  color: transparent !important;
}
.popover.hover-popover > .markdown-embed > .markdown-embed-content > .markdown-preview-view:hover {
  color: hsla(var(--color-accent-hsl), 24%) !important;
}

:is(body:not(.scrollbar-hover-animation) *, textarea)::-webkit-scrollbar-thumb {
  border-width: 3.2px;
  background-color: transparent !important;
}
:is(body:not(.scrollbar-hover-animation) *, textarea):hover::-webkit-scrollbar-thumb {
  background-color: hsla(var(--color-accent-hsl), 30%) !important;
}
:is(body:not(.scrollbar-hover-animation) *, textarea):hover::-webkit-scrollbar-thumb:active {
  background-color: hsla(var(--color-accent-hsl), 64%) !important;
}

body.scrollbar-smooth.scrollbar-smooth-editor .workspace-leaf-content[data-type=markdown] .cm-scroller, .markdown-preview-view,
body.scrollbar-smooth :is(.vertical-tab-header, .vertical-tab-content, .nav-files-container, .view-content, .search-result-container, .git-view-body, .suggestion-container .suggestion, .prompt-results, .markdown-embed-content, .community-modal-search-results-wrapper, .community-modal-info, .modal:not(.mod-settings, .mod-community-theme, .mod-community-plugin), .tag-container, .backlink-pane, .workspace .mod-root .workspace-tabs.mod-stacked .workspace-tab-container, .workspace-leaf-content[data-type=calendar] .view-content, .janitor-scan-results, .excalidraw-wrapper :is(.App-mobile-menu, .App-menu .Stack .Island.App-menu__left, .scrollbar), .kanban-plugin__board, .kanban-plugin__lane-items) {
  scroll-behavior: smooth;
}

/* ====== tab栏 ====== */
body.tab-float .workspace-tab-header-container {
  --tab-outline-width: 0 !important;
}
body.tab-float .mod-root .workspace-tab-header-container-inner {
  margin-top: var(--size-4-1);
  padding-bottom: var(--size-4-1);
}
body.tab-float .mod-root .workspace-tab-header {
  padding-bottom: 0 !important;
  padding-top: 0 !important;
}
body.tab-float .mod-root .workspace-tab-header.is-active {
  --tab-radius-active: var(--size-2-3);
  box-shadow: var(--shadow-s);
  border: 1px solid var(--color-base-30);
}
body.tab-float .mod-root .workspace-tab-header .workspace-tab-header-inner-close-button {
  padding: var(--size-2-1);
}
body.tab-float.theme-dark .mod-root .workspace-tab-header.is-active {
  box-shadow: none;
}
body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::before, body.tab-float .workspace-split.mod-root .workspace-tab-header.is-active::after {
  box-shadow: none;
}
body.tab-float .workspace-tab-header-new-tab {
  padding-top: var(--size-4-1);
}

/* ====== 标题栏 ====== */
.titlebar-button.mod-close:hover {
  color: var(--text-on-accent);
}

.workspace-tab-header-new-tab {
  padding-bottom: var(--size-2-1);
}

/* minimal theme 片段 frame-color */
:is(body, body.is-focused) :is(.mod-top .workspace-tab-header-container,
.sidebar-toggle-button.mod-left, .titlebar),
:is(body, body.is-focused) .workspace-ribbon.mod-left:before {
  --titlebar-container: var(--frame-outline-color);
  --frame-divider-color: var(--frame-outline-color);
  --titlebar-background: var(--frame-background-color);
  --titlebar-background-focused: var(--frame-background-color);
  --tab-container-background: var(--frame-background-color);
  --titlebar-text-color: var(--frame-muted-color);
  --tab-outline-color: var(--frame-outline-color);
  --tab-divider-color: var(--frame-outline-color);
  --background-modifier-hover: var(--frame-outline-color);
  --icon-color: var(--frame-muted-color);
  --icon-color-hover: var(--frame-muted-color);
  --icon-color-focus: var(--text-on-accent);
  --tab-text-color: var(--frame-muted-color);
  --tab-text-color-hover: var(--frame-muted-color);
  --tab-text-color-focused: var(--frame-muted-color);
}
:is(body, body.is-focused) .clickable-icon:active {
  color: var(--text-normal);
}

.workspace.is-left-sidedock-open .sidebar-toggle-button.mod-left .clickable-icon,
.workspace.is-right-sidedock-open .sidebar-toggle-button.mod-right .clickable-icon {
  color: hsl(var(--color-accent-hsl));
}

/* ====== 右键菜单 ======*/
body.back-blur-menu :is(.menu, .suggestion-container) {
  background-color: hsla(var(--background-secondary-hsl), 0.7);
  backdrop-filter: blur(var(--blur));
}
body.back-blur-modal .modal-bg {
  backdrop-filter: blur(calc(var(--blur) / 2));
  opacity: initial !important;
  background-color: hsla(var(--accent-h), 20%, 8%, 30%);
}
body.back-blur-title-bar .workspace-leaf-content[data-type=markdown] .view-header {
  --background-primary: hsla(var(--background-primary-hsl), 0.9);
  backdrop-filter: blur(var(--blur));
  position: absolute;
  width: calc(100% - var(--size-4-3));
  margin-right: var(--size-4-3);
  padding-right: 0;
}
body.back-blur-title-bar.tab-title-bar .workspace-leaf-content[data-type=markdown] .view-content .cm-scroller {
  padding-top: calc(var(--file-margins) + var(--size-4-4));
}
body.back-blur-title-bar.tab-title-bar .workspace-leaf-content[data-type=markdown] .view-header {
  margin: var(--size-4-1) calc(var(--size-4-4) - var(--size-2-1)) 0;
  width: calc(100% - 2 * (var(--size-4-4) - var(--size-2-1)));
  --background-primary: hsla(var(--background-secondary-hsl), 0.9);
}
body.back-blur-title-bar .workspace-leaf.mod-active .workspace-leaf-content[data-type=markdown] .view-header {
  --background-primary: hsla(var(--background-primary-hsl), 0.6);
}
body.back-blur-title-bar.tab-title-bar .workspace-leaf.mod-active .workspace-leaf-content[data-type=markdown] .view-header {
  --background-primary: hsla(var(--background-secondary-hsl), 0.6);
}

.print :is(.markdown-preview-view, .markdown-rendered) {
  background-color: var(--background-primary) !important;
}
.print pre::before {
  right: var(--size-4-2) !important;
}
.print pre code {
  tab-size: 4;
}
.print .markdown-preview-view table {
  resize: initial;
}
