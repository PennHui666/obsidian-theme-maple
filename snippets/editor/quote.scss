/* ====== 引用 ====== */

@use 'sass:math';
$level-max: 8;
$indent: 0.6rem;
$mark-size: 3rem;

:is(body, .print .markdown-rendered) {
  --blockquote-background-color: var(--md-container-bg);
  --callout-radius: var(--radius-l);
}

body.quote-theme {
  --blockquote-border-color: var(--accent-active);

  :is(.markdown-source-view, .markdown-rendered) {
    --blockquote-border-thickness: var(--size-4-1);
    --blockquote-radius: var(--size-2-3);
  }

  .markdown-source-view.mod-cm6 {
    :is(.HyperMD-quote, .cm-blockquote-border)::before {
      width: var(--blockquote-border-thickness);
      border-left: none;
      background-color: var(--blockquote-border-color);
      border-radius: var(--blockquote-radius);
      inset-block: var(--blockquote-radius);
    }

    .HyperMD-quote {
      border-radius: 0 !important;

      &.cm-active {
        &:not(:has(+.HyperMD-quote:not(.HyperMD-callout))) {
          border-bottom-left-radius: var(--blockquote-radius) !important;
          border-bottom-right-radius: var(--blockquote-radius) !important;
        }

        .cm-blockquote-border::before {
          background-color: transparent;
        }
      }

      &::before {
        left: calc(var(--blockquote-border-thickness));
        z-index: 10;
      }

      &+.HyperMD-quote::before {
        top: calc(var(--blockquote-radius) * -2);
      }
    }

    :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content :first-child:is(.HyperMD-quote)) {
      border-top-left-radius: var(--blockquote-radius) !important;
      border-top-right-radius: var(--blockquote-radius) !important;

      &::after,
      .cm-quote.cm-formatting::after {
        content: none !important;
      }
    }
  }

  .markdown-rendered blockquote {
    background-color: var(--md-container-bg);
    border: none !important;
    border-radius: var(--blockquote-radius);
    box-shadow: var(--shadow-s);
    margin-inline-end: 0;
    position: relative;
    margin-block: var(--size-4-3);
    margin-left: 0;
    padding-block: 0;

    p {
      padding-left: var(--blockquote-border-thickness);
      padding-right: var(--size-4-1);
    }

    &::after {
      content: '';
      position: absolute;
      left: calc(var(--blockquote-radius) * 4 / 5);
      top: var(--blockquote-radius);
      border-radius: var(--blockquote-radius);
      height: calc(100% - var(--blockquote-radius) * 2);
      width: var(--blockquote-border-thickness);
      background-color: var(--accent-active);
    }

    blockquote {
      box-shadow: none;
      margin: 0;
    }
  }

  &.quote-mark {
    :is(div:not(.HyperMD-quote) + .HyperMD-quote-1:not(.HyperMD-callout), .cm-content :first-child:is(.HyperMD-quote):not(.HyperMD-callout)) {
      text-indent: $indent * 2 !important;

      &:not(.cm-active) {

        @at-root body.quote-mark.quote-theme blockquote::before,
        &>.cm-formatting.cm-formatting-quote.cm-quote-1::before {
          position: absolute;
          font-size: $mark-size;
          font-family: Source Code Pro;
          line-height: 1;
          content: '“' !important;
          background-color: transparent;
          color: var(--text-muted);
          top: calc(var(--font-text-size) * var(--line-height-normal) - math.div($mark-size, 1.4));
          transform: translateX($indent * -2.2);
        }
      }
    }

    .markdown-rendered blockquote {
      padding-left: $indent * 3.8;

      &::before {
        transform: translateX($indent * -2.7);
      }
    }
  }

}

$items: (
);

@for $i from 2 through $level-max {
  @for $j from 2 through $level-max {
    $items: append($list: $items,
      $val: '.HyperMD-quote-#{$j}:not(.cm-active)+.HyperMD-quote-#{$i} .cm-blockquote-border:nth-of-type(-n + #{$j})',
      $separator: comma);
  }
}

/* 引导线高度修复 */
:is(#{$items})::before {
  top: calc(var(--blockquote-radius) * -2);
}

// 填补当前行的空隙
// body:not(.line-active-disable) .markdown-source-view.mod-cm6 .HyperMD-quote:not(.HyperMD-callout) {

//   &::after,
//   .cm-quote.cm-formatting-quote-1::after {
//     content: '';
//     position: absolute;
//     display: inline-block;
//     z-index: 9;
//     height: var(--blockquote-radius);
//     width: var(--blockquote-radius);
//     top: calc(var(--blockquote-radius) * -1);
//     background-color: var(--md-container-bg);
//   }

//   &::after {
//     left: 0;
//   }

//   .cm-quote.cm-formatting-quote-1::after {
//     right: 0;
//   }

//   &.cm-active+.HyperMD-quote:not(.HyperMD-callout)::after,
//   &.cm-active+.HyperMD-quote:not(.HyperMD-callout) .cm-quote.cm-formatting::after {
//     background-color: var(--active-line);
//   }
// }

// fix bugs, corner fill cause wrap
// body.quote-theme.quote-break-all
//   .HyperMD-quote:not(.HyperMD-callout)
//   .cm-quote:not(.cm-formatting) {
//   word-break: break-all;
// }

// old style
// body.quote-theme {
//   --blockquote-border-thickness: var(--size-2-3);
//   --quote-radius: max(
//     calc(var(--blockquote-border-thickness) / 2),
//     var(--radius-s)
//   );
//   .markdown-source-view.mod-cm6.is-live-preview {
//     .HyperMD-quote:not(.HyperMD-callout) {
//       text-indent: 0 !important;
//       border-top-left-radius: 0 !important;
//       border-top-right-radius: 0 !important;
//       border-bottom-left-radius: var(--quote-radius);
//       border-bottom-right-radius: var(--quote-radius);
//       display: flex;

//       @for $i from 1 through $num {
//         &.HyperMD-quote-#{$i} {
//           padding-inline-start: $i * ($indent - 0.6rem) + 0.4rem !important;
//           text-indent: $i * -0.55rem !important;
//         }
//       }
//       /* === fix gap === */
//       .cm-quote:not(.cm-formatting) {
//         &::before,
//         &::after {
//           content: '';
//           position: absolute;
//           z-index: 9;
//           height: var(--quote-radius);
//           width: var(--quote-radius);
//           bottom: 0;
//           background-color: var(--md-container-bg);
//         }

//         &::before {
//           left: 0;
//         }
//         &::after {
//           right: 0;
//         }
//       }
//       &.cm-active .cm-quote:not(.cm-formatting) {
//         &::before,
//         &::after {
//           background-color: var(--active-line);
//         }
//       }
//       &::before,
//       &::after {
//         border-left: none !important;
//         content: '';
//         position: absolute;
//         left: var(--blockquote-border-thickness);
//         top: unset;
//         bottom: var(--blockquote-border-thickness);
//         height: calc(100% + var(--blockquote-border-thickness));
//         width: var(--blockquote-border-thickness);
//         border-radius: var(--blockquote-border-thickness);
//         background-color: var(--accent-active);
//         color: var(--accent-active);
//       }
//       &::before {
//         height: calc(100% - var(--blockquote-border-thickness) * 2);
//       }
//     }
//     :is(.internal-embed, .cm-line:not(.HyperMD-quote))
//       + .HyperMD-quote:not(.HyperMD-callout) {
//       &::before {
//         top: var(--blockquote-border-thickness);
//         height: calc(100% - var(--blockquote-border-thickness) * 2);
//       }
//       &::after {
//         content: none;
//       }
//     }
//     .cm-content :first-child:is(.HyperMD-quote)::after {
//       content: none;
//     }
//     :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-line:not(.HyperMD-quote)
//         + .HyperMD-quote-1, .cm-content :first-child:is(.HyperMD-quote)) {
//       border-top-left-radius: var(--quote-radius) !important;
//       border-top-right-radius: var(--quote-radius) !important;
//       border-bottom-left-radius: 0;
//       border-bottom-right-radius: 0;
//       .cm-quote:not(.cm-formatting) {
//         &::before,
//         &::after {
//           content: none !important;
//         }
//       }
//     }
//     .cm-blockquote-border::before,
//     .HyperMD-callout .cm-quote::before {
//       content: none !important;
//     }
//   }
// }
// @for $i from 2 through $num {
//   $gap: $indent;
//   $shadow: '';
//   $active: ();
//   @for $j from 1 through $i - 1 {
//     $active: append(
//       $list: $active,
//       $val: unquote($gap * $j + ' 0'),
//       $separator: comma
//     );
//   }
//   @for $j from 1 through $num {
//     $before: ();
//     $after: ();
//     @if $j < $i {
//       @for $index from 1 through $i - 1 {
//         $temp: unquote($gap * $index + ' 0');
//         @if $index <= $j - 1 {
//           $after: append(
//             $list: $after,
//             $val: $temp,
//             $separator: comma
//           );
//         } @else {
//           $before: append(
//             $list: $before,
//             $val: $temp,
//             $separator: comma
//           );
//         }
//       }
//       @if $before == () {
//         $before: none;
//       }
//       @if $after == () {
//         $after: none;
//       }
//     } @else {
//       $before: none;
//       @for $index from 1 through $i - 1 {
//         $temp: unquote($gap * $index + ' 0');
//         $after: append(
//           $list: $after,
//           $val: $temp,
//           $separator: comma
//         );
//       }
//     }
//     div.HyperMD-quote-#{$j}:not(.HyperMD-callout)
//       + .HyperMD-quote-#{$i}:not(.HyperMD-callout):not(.cm-active)::before {
//       box-shadow: $before;
//     }
//     div.HyperMD-quote-#{$j}:not(.HyperMD-callout)
//       + .HyperMD-quote-#{$i}:not(.HyperMD-callout):not(.cm-active)::after {
//       box-shadow: $after;
//     }
//   }
//   div.HyperMD-quote:not(.HyperMD-callout):is(.cm-active)
//     + div.HyperMD-quote-#{$i}:not(.HyperMD-callout) {
//     &::before {
//       box-shadow: $active;
//     }
//     &::after {
//       box-shadow: none;
//     }
//   }
// }