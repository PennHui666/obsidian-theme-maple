/* ====== 引用 ====== */

body {
  --quote-guide-line-width: var(--size-2-3);
  --quote-radius: var(--radius-s);
  --blockquote-background-color: var(--md-container-bg);
}
.markdown-rendered blockquote {
  background-color: var(--md-container-bg);
  border: none !important;
  border-radius: var(--radius-s);
  box-shadow: var(--shadow-s);
  margin-inline-end: 0;
  position: relative;
  margin: {
    left: 0;
    top: 10px;
    bottom: 10px;
  }
  padding: {
    top: 0;
    bottom: 0;
    left: 56px;
  }
  &::before {
    left: calc(var(--size-4-5) * -1);
    top: var(--size-4-6);
  }
  &::after {
    content: '';
    position: absolute;
    left: var(--quote-guide-line-width);
    top: var(--quote-guide-line-width);
    border-radius: calc(var(--quote-guide-line-width) / 2);
    height: calc(100% - var(--quote-guide-line-width) * 2);
    width: var(--quote-guide-line-width);
    background-color: var(--accent-active);
  }
  blockquote {
    box-shadow: none;
    margin: 0;
  }
}
.markdown-source-view.mod-cm6.is-live-preview {
  .HyperMD-quote:not(.callout) {
    text-indent: 12px !important;
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
    border-bottom-left-radius: var(--quote-radius);
    border-bottom-right-radius: var(--quote-radius);
    &.cm-active {
      // border-radius: 0;
      + .HyperMD-quote:not(.callout)
        .cm-formatting.cm-formatting-quote.cm-quote {
        &::before,
        &::after {
          background-color: var(--active-line);
        }
      }
    }
    &.HyperMD-quote-1 {
      text-indent: 28px !important;
    }
    /* === fix gap === */
    .cm-formatting.cm-formatting-quote.cm-quote {
      &::before,
      &::after {
        content: '';
        position: absolute;
        height: var(--quote-radius);
        width: var(--quote-radius);
        background-color: var(--md-container-bg);
        top: calc(var(--quote-radius) * -1);
      }
      &::before {
        left: 0;
      }
      &::after {
        right: 0;
      }
    }
    &::before,
    &::after {
      border-left: none !important;
      content: '';
      position: absolute;
      left: var(--quote-guide-line-width);
      top: unset;
      bottom: var(--quote-guide-line-width);
      height: calc(100% + var(--quote-guide-line-width));
      width: var(--quote-guide-line-width);
      border-radius: var(--quote-guide-line-width);
      background-color: var(--accent-active);
      color: var(--accent-active);
    }
    &::before {
      height: calc(100% - var(--quote-guide-line-width) * 2);
    }
  }
  :is(.internal-embed, .cm-line:not(.HyperMD-quote))
    + .HyperMD-quote:not(.callout) {
    &::before {
      top: var(--quote-guide-line-width);
      height: calc(100% - var(--quote-guide-line-width) * 2);
    }
    &::after {
      content: none;
    }
  }
  .cm-content :first-child:is(.HyperMD-quote)::after {
    content: none;
  }
  :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-content
      :first-child:is(.HyperMD-quote))
    .cm-formatting.cm-formatting-quote.cm-quote {
    &::before,
    &::after {
      content: none !important;
    }
  }

  :is(div:not(.HyperMD-quote)
      + .HyperMD-quote, .HyperMD-quote:not(.HyperMD-quote-1)
      + .HyperMD-quote-1, .cm-content :first-child:is(.HyperMD-quote)) {
    border-top-left-radius: var(--quote-radius) !important;
    border-top-right-radius: var(--quote-radius) !important;
    &:not(.cm-active) {
      @at-root blockquote::before,
        & > .cm-formatting.cm-formatting-quote.cm-quote-1::before {
        position: absolute;
        font: 14px/20px italic Times, serif;
        content: '“' !important;
        background-color: transparent;
        font-size: 4em;
        color: var(--text-muted);
      }
      & > .cm-formatting.cm-formatting-quote.cm-quote {
        &::before {
          left: calc(var(--size-4-6) * -1);
          top: var(--size-4-6);
        }
      }
      &:is(.HyperMD-quote-2)
        > .cm-formatting.cm-formatting-quote.cm-quote::before {
        left: calc(var(--size-4-4) * -1.5);
      }
    }
  }
  // guide line todo
  $num: 5;
  @for $i from 2 through $num {
    $gap: 20px;
    $shadow: '';
    @for $j from 1 through $num {
      $before: ();
      $after: ();
      @if $j < $i {
        @for $index from 1 through $i - 1 {
          $temp: unquote($gap * $index + ' 0');
          @if $index <= $j - 1 {
            $after: append(
              $list: $after,
              $val: $temp,
              $separator: comma
            );
          } @else {
            $before: append(
              $list: $before,
              $val: $temp,
              $separator: comma
            );
          }
        }
        @if $before == () {
          $before: none;
        }
        @if $after == () {
          $after: none;
        }
      } @else {
        $before: none;
        @for $index from 1 through $i - 1 {
          $temp: unquote($gap * $index + ' 0');
          $after: append(
            $list: $after,
            $val: $temp,
            $separator: comma
          );
        }
      }
      div.HyperMD-quote-#{$j}:not(.callout)
        + .HyperMD-quote-#{$i}:not(.callout)::before {
        box-shadow: $before;
      }
      div.HyperMD-quote-#{$j}:not(.callout)
        + .HyperMD-quote-#{$i}:not(.callout)::after {
        box-shadow: $after;
      }
    }
    // div:not(.HyperMD-quote-#{$i}) + .HyperMD-quote-#{$i}:not(.callout)::before,
    // div.HyperMD-quote-#{$i} + .HyperMD-quote-#{$i}:not(.callout)::after {
    //   box-shadow: unquote($gap * $i + ' 0');
    // }
  }
  .cm-blockquote-border::before,
  .HyperMD-callout .cm-quote::before {
    content: none !important;
  }
}
body {
  --callout-radius: var(--radius-l);
}
