/* ====== 引用 ====== */
@use 'sass:math';
$num: 8;
$indent: 1.6rem;
body {
  --quote-guide-line-width: var(--size-2-3);
  --quote-radius: var(--radius-s);
  --blockquote-background-color: var(--md-container-bg);
}
.markdown-rendered blockquote {
  background-color: var(--md-container-bg);
  border: none !important;
  border-radius: var(--radius-s);
  box-shadow: var(--shadow-s);
  margin-inline-end: 0;
  position: relative;
  margin: {
    left: 0;
    top: 10px;
    bottom: 10px;
  }
  padding: {
    top: 0;
    bottom: 0;
    left: $indent;
  }
  p {
    padding-left: var(--quote-guide-line-width);
    padding-right: var(--size-4-1);
  }
  &::after {
    content: '';
    position: absolute;
    left: var(--quote-guide-line-width);
    top: var(--quote-guide-line-width);
    border-radius: calc(var(--quote-guide-line-width) / 2);
    height: calc(100% - var(--quote-guide-line-width) * 2);
    width: var(--quote-guide-line-width);
    background-color: var(--accent-active);
  }
  blockquote {
    box-shadow: none;
    margin: 0;
  }
}
.markdown-source-view.mod-cm6.is-live-preview {
  .HyperMD-quote:not(.callout) {
    text-indent: 0 !important;
    border-top-left-radius: 0 !important;
    border-top-right-radius: 0 !important;
    border-bottom-left-radius: var(--quote-radius);
    border-bottom-right-radius: var(--quote-radius);
    display: flex;

    @for $i from 1 through $num {
      &.HyperMD-quote-#{$i} {
        padding-inline-start: $i * ($indent - 0.6rem) + 0.4rem !important;
        text-indent: $i * -0.55rem !important;
      }
    }
    /* === fix gap === */
    .cm-quote:not(.cm-formatting) {
      &::before,
      &::after {
        content: '';
        position: absolute;
        z-index: 9;
        height: var(--quote-radius);
        width: var(--quote-radius);
        bottom: 0;
        background-color: var(--md-container-bg);
      }

      &::before {
        left: 0;
      }
      &::after {
        right: 0;
      }
    }
    &.cm-active .cm-quote:not(.cm-formatting) {
      &::before,
      &::after {
        background-color: var(--active-line);
      }
    }
    &::before,
    &::after {
      border-left: none !important;
      content: '';
      position: absolute;
      left: var(--quote-guide-line-width);
      top: unset;
      bottom: var(--quote-guide-line-width);
      height: calc(100% + var(--quote-guide-line-width));
      width: var(--quote-guide-line-width);
      border-radius: var(--quote-guide-line-width);
      background-color: var(--accent-active);
      color: var(--accent-active);
    }
    &::before {
      height: calc(100% - var(--quote-guide-line-width) * 2);
    }
  }
  :is(.internal-embed, .cm-line:not(.HyperMD-quote))
    + .HyperMD-quote:not(.callout) {
    &::before {
      top: var(--quote-guide-line-width);
      height: calc(100% - var(--quote-guide-line-width) * 2);
    }
    &::after {
      content: none;
    }
  }
  .cm-content :first-child:is(.HyperMD-quote)::after {
    content: none;
  }
  :is(div:not(.HyperMD-quote) + .HyperMD-quote, .cm-line:not(.HyperMD-quote)
      + .HyperMD-quote-1, .cm-content :first-child:is(.HyperMD-quote)) {
    border-top-left-radius: var(--quote-radius) !important;
    border-top-right-radius: var(--quote-radius) !important;
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    .cm-quote:not(.cm-formatting) {
      &::before,
      &::after {
        content: none !important;
      }
    }
  }
  .cm-blockquote-border::before,
  .HyperMD-callout .cm-quote::before {
    content: none !important;
  }
}

body.quote-mark {
  .markdown-source-view.mod-cm6.is-live-preview .HyperMD-quote.HyperMD-quote-1 {
    text-indent: -0.5rem !important;
    padding-inline-start: $indent * 2 - 0.2rem !important;
  }
  :is(div:not(.HyperMD-quote)
      + .HyperMD-quote, .HyperMD-quote:not(.HyperMD-quote-1)
      + .HyperMD-quote-1, .cm-content
      :first-child:is(.HyperMD-quote)):not(.cm-active) {
    @at-root body.quote-mark blockquote::before,
      & > .cm-formatting.cm-formatting-quote.cm-quote-1::before {
      position: absolute;
      font-size: 2rem;
      font-weight: bold;
      font-family: Source Code Pro;
      line-height: 1;
      content: '“' !important;
      background-color: transparent;
      color: var(--text-muted);
    }

    @at-root body.quote-mark blockquote::before,
      & > .cm-formatting.cm-formatting-quote.cm-quote::before {
      left: $indent;
      top: calc(var(--font-text-size) * var(--line-height-normal) / 10);
    }
  }
  .markdown-rendered blockquote {
    padding-left: $indent * 2;
  }
}

@for $i from 2 through $num {
  $gap: $indent;
  $shadow: '';
  $active: ();
  @for $j from 1 through $i - 1 {
    $active: append(
      $list: $active,
      $val: unquote($gap * $j + ' 0'),
      $separator: comma
    );
  }
  @for $j from 1 through $num {
    $before: ();
    $after: ();
    @if $j < $i {
      @for $index from 1 through $i - 1 {
        $temp: unquote($gap * $index + ' 0');
        @if $index <= $j - 1 {
          $after: append(
            $list: $after,
            $val: $temp,
            $separator: comma
          );
        } @else {
          $before: append(
            $list: $before,
            $val: $temp,
            $separator: comma
          );
        }
      }
      @if $before == () {
        $before: none;
      }
      @if $after == () {
        $after: none;
      }
    } @else {
      $before: none;
      @for $index from 1 through $i - 1 {
        $temp: unquote($gap * $index + ' 0');
        $after: append(
          $list: $after,
          $val: $temp,
          $separator: comma
        );
      }
    }
    div.HyperMD-quote-#{$j}:not(.callout)
      + .HyperMD-quote-#{$i}:not(.callout):not(.cm-active)::before {
      box-shadow: $before;
    }
    div.HyperMD-quote-#{$j}:not(.callout)
      + .HyperMD-quote-#{$i}:not(.callout):not(.cm-active)::after {
      box-shadow: $after;
    }
  }
  div.HyperMD-quote:not(.callout):is(.cm-active)
    + div.HyperMD-quote-#{$i}:not(.callout) {
    &::before {
      box-shadow: $active;
    }
    &::after {
      box-shadow: none;
    }
  }
}
body {
  --callout-radius: var(--radius-l);
}
